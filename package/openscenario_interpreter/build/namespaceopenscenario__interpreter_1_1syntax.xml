<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceopenscenario__interpreter_1_1syntax" kind="namespace" language="C++">
    <compoundname>openscenario_interpreter::syntax</compoundname>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetLane" prot="public">openscenario_interpreter::syntax::AbsoluteTargetLane</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AbsoluteTargetSpeed" prot="public">openscenario_interpreter::syntax::AbsoluteTargetSpeed</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AccelerationCondition" prot="public">openscenario_interpreter::syntax::AccelerationCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AcquirePositionAction" prot="public">openscenario_interpreter::syntax::AcquirePositionAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Act" prot="public">openscenario_interpreter::syntax::Act</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Action" prot="public">openscenario_interpreter::syntax::Action</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Actors" prot="public">openscenario_interpreter::syntax::Actors</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AddEntityAction" prot="public">openscenario_interpreter::syntax::AddEntityAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AdditionalAxle" prot="public">openscenario_interpreter::syntax::AdditionalAxle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" prot="public">openscenario_interpreter::syntax::Arrow</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AssignControllerAction" prot="public">openscenario_interpreter::syntax::AssignControllerAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1AssignRouteAction" prot="public">openscenario_interpreter::syntax::AssignRouteAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Axle" prot="public">openscenario_interpreter::syntax::Axle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Axles" prot="public">openscenario_interpreter::syntax::Axles</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" prot="public">openscenario_interpreter::syntax::Boolean</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1BoundingBox" prot="public">openscenario_interpreter::syntax::BoundingBox</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ByEntityCondition" prot="public">openscenario_interpreter::syntax::ByEntityCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ByType" prot="public">openscenario_interpreter::syntax::ByType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ByValueCondition" prot="public">openscenario_interpreter::syntax::ByValueCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CatalogDefinition" prot="public">openscenario_interpreter::syntax::CatalogDefinition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CatalogLocation" prot="public">openscenario_interpreter::syntax::CatalogLocation</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CatalogLocations" prot="public">openscenario_interpreter::syntax::CatalogLocations</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Center" prot="public">openscenario_interpreter::syntax::Center</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CollisionCondition" prot="public">openscenario_interpreter::syntax::CollisionCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Color" prot="public">openscenario_interpreter::syntax::Color</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Command" prot="public">openscenario_interpreter::syntax::Command</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Condition" prot="public">openscenario_interpreter::syntax::Condition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ConditionEdge" prot="public">openscenario_interpreter::syntax::ConditionEdge</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ConditionGroup" prot="public">openscenario_interpreter::syntax::ConditionGroup</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Controller" prot="public">openscenario_interpreter::syntax::Controller</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ControllerAction" prot="public">openscenario_interpreter::syntax::ControllerAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1CustomCommandAction" prot="public">openscenario_interpreter::syntax::CustomCommandAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DeleteEntityAction" prot="public">openscenario_interpreter::syntax::DeleteEntityAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Dimensions" prot="public">openscenario_interpreter::syntax::Dimensions</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Directory" prot="public">openscenario_interpreter::syntax::Directory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DistanceCondition" prot="public">openscenario_interpreter::syntax::DistanceCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Double" prot="public">openscenario_interpreter::syntax::Double</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsDimension" prot="public">openscenario_interpreter::syntax::DynamicsDimension</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsShape" prot="public">openscenario_interpreter::syntax::DynamicsShape</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Entities" prot="public">openscenario_interpreter::syntax::Entities</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityAction" prot="public">openscenario_interpreter::syntax::EntityAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityCondition" prot="public">openscenario_interpreter::syntax::EntityCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityObject" prot="public">openscenario_interpreter::syntax::EntityObject</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntityRef" prot="public">openscenario_interpreter::syntax::EntityRef</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1EntitySelection" prot="public">openscenario_interpreter::syntax::EntitySelection</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1equal__to" prot="public">openscenario_interpreter::syntax::equal_to</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1equal__to_3_01T_00_01typename_01std_1_1enable__if_36950e835545f4465da1ac88fcd135173" prot="public">openscenario_interpreter::syntax::equal_to&lt; T, typename std::enable_if&lt; std::is_floating_point&lt; T &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Event" prot="public">openscenario_interpreter::syntax::Event</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1File" prot="public">openscenario_interpreter::syntax::File</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1FileHeader" prot="public">openscenario_interpreter::syntax::FileHeader</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1FrontAxle" prot="public">openscenario_interpreter::syntax::FrontAxle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1GlobalAction" prot="public">openscenario_interpreter::syntax::GlobalAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1InfrastructureAction" prot="public">openscenario_interpreter::syntax::InfrastructureAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Init" prot="public">openscenario_interpreter::syntax::Init</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1InitActions" prot="public">openscenario_interpreter::syntax::InitActions</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Integer" prot="public">openscenario_interpreter::syntax::Integer</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LaneChangeAction" prot="public">openscenario_interpreter::syntax::LaneChangeAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LaneChangeTarget" prot="public">openscenario_interpreter::syntax::LaneChangeTarget</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LanePosition" prot="public">openscenario_interpreter::syntax::LanePosition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LateralAction" prot="public">openscenario_interpreter::syntax::LateralAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1LongitudinalAction" prot="public">openscenario_interpreter::syntax::LongitudinalAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Maneuver" prot="public">openscenario_interpreter::syntax::Maneuver</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ManeuverGroup" prot="public">openscenario_interpreter::syntax::ManeuverGroup</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1MiscObject" prot="public">openscenario_interpreter::syntax::MiscObject</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1MiscObjectCategory" prot="public">openscenario_interpreter::syntax::MiscObjectCategory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ModifyRule" prot="public">openscenario_interpreter::syntax::ModifyRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ObjectController" prot="public">openscenario_interpreter::syntax::ObjectController</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ObjectType" prot="public">openscenario_interpreter::syntax::ObjectType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1OpenScenario" prot="public">openscenario_interpreter::syntax::OpenScenario</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1OpenScenarioCategory" prot="public">openscenario_interpreter::syntax::OpenScenarioCategory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Orientation" prot="public">openscenario_interpreter::syntax::Orientation</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1OverrideControllerValueAction" prot="public">openscenario_interpreter::syntax::OverrideControllerValueAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterAction" prot="public">openscenario_interpreter::syntax::ParameterAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterAddValueRule" prot="public">openscenario_interpreter::syntax::ParameterAddValueRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterCondition" prot="public">openscenario_interpreter::syntax::ParameterCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclaration" prot="public">openscenario_interpreter::syntax::ParameterDeclaration</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclarations" prot="public">openscenario_interpreter::syntax::ParameterDeclarations</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterModifyAction" prot="public">openscenario_interpreter::syntax::ParameterModifyAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterMultiplyByValueRule" prot="public">openscenario_interpreter::syntax::ParameterMultiplyByValueRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterSetAction" prot="public">openscenario_interpreter::syntax::ParameterSetAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterType" prot="public">openscenario_interpreter::syntax::ParameterType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Pedestrian" prot="public">openscenario_interpreter::syntax::Pedestrian</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1PedestrianCategory" prot="public">openscenario_interpreter::syntax::PedestrianCategory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Performance" prot="public">openscenario_interpreter::syntax::Performance</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Phase" prot="public">openscenario_interpreter::syntax::Phase</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Position" prot="public">openscenario_interpreter::syntax::Position</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Priority" prot="public">openscenario_interpreter::syntax::Priority</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Private" prot="public">openscenario_interpreter::syntax::Private</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1PrivateAction" prot="public">openscenario_interpreter::syntax::PrivateAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Properties" prot="public">openscenario_interpreter::syntax::Properties</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Property" prot="public">openscenario_interpreter::syntax::Property</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ReachPositionCondition" prot="public">openscenario_interpreter::syntax::ReachPositionCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RearAxle" prot="public">openscenario_interpreter::syntax::RearAxle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ReferenceContext" prot="public">openscenario_interpreter::syntax::ReferenceContext</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceCondition" prot="public">openscenario_interpreter::syntax::RelativeDistanceCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceType" prot="public">openscenario_interpreter::syntax::RelativeDistanceType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeTargetSpeed" prot="public">openscenario_interpreter::syntax::RelativeTargetSpeed</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RelativeWorldPosition" prot="public">openscenario_interpreter::syntax::RelativeWorldPosition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RoadNetwork" prot="public">openscenario_interpreter::syntax::RoadNetwork</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Route" prot="public">openscenario_interpreter::syntax::Route</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RouteStrategy" prot="public">openscenario_interpreter::syntax::RouteStrategy</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1RoutingAction" prot="public">openscenario_interpreter::syntax::RoutingAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Rule" prot="public">openscenario_interpreter::syntax::Rule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition" prot="public">openscenario_interpreter::syntax::ScenarioDefinition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioObject" prot="public">openscenario_interpreter::syntax::ScenarioObject</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SelectedEntities" prot="public">openscenario_interpreter::syntax::SelectedEntities</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SimulationTimeCondition" prot="public">openscenario_interpreter::syntax::SimulationTimeCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpecialAction" prot="public">openscenario_interpreter::syntax::SpecialAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedAction" prot="public">openscenario_interpreter::syntax::SpeedAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedActionTarget" prot="public">openscenario_interpreter::syntax::SpeedActionTarget</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedCondition" prot="public">openscenario_interpreter::syntax::SpeedCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1SpeedTargetValueType" prot="public">openscenario_interpreter::syntax::SpeedTargetValueType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StandStillCondition" prot="public">openscenario_interpreter::syntax::StandStillCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Story" prot="public">openscenario_interpreter::syntax::Story</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Storyboard" prot="public">openscenario_interpreter::syntax::Storyboard</innerclass>
    <innerclass refid="classopenscenario__interpreter_1_1syntax_1_1StoryboardElement" prot="public">openscenario_interpreter::syntax::StoryboardElement</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" prot="public">openscenario_interpreter::syntax::StoryboardElementState</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementStateCondition" prot="public">openscenario_interpreter::syntax::StoryboardElementStateCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementType" prot="public">openscenario_interpreter::syntax::StoryboardElementType</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TeleportAction" prot="public">openscenario_interpreter::syntax::TeleportAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TimeHeadwayCondition" prot="public">openscenario_interpreter::syntax::TimeHeadwayCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalAction" prot="public">openscenario_interpreter::syntax::TrafficSignalAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalCondition" prot="public">openscenario_interpreter::syntax::TrafficSignalCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" prot="public">openscenario_interpreter::syntax::TrafficSignalController</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalControllerAction" prot="public">openscenario_interpreter::syntax::TrafficSignalControllerAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalControllerCondition" prot="public">openscenario_interpreter::syntax::TrafficSignalControllerCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" prot="public">openscenario_interpreter::syntax::TrafficSignals</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" prot="public">openscenario_interpreter::syntax::TrafficSignalState</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalStateAction" prot="public">openscenario_interpreter::syntax::TrafficSignalStateAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TransitionDynamics" prot="public">openscenario_interpreter::syntax::TransitionDynamics</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Trigger" prot="public">openscenario_interpreter::syntax::Trigger</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntities" prot="public">openscenario_interpreter::syntax::TriggeringEntities</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntitiesRule" prot="public">openscenario_interpreter::syntax::TriggeringEntitiesRule</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" prot="public">openscenario_interpreter::syntax::UnsignedInteger</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" prot="public">openscenario_interpreter::syntax::UnsignedShort</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UserDefinedAction" prot="public">openscenario_interpreter::syntax::UserDefinedAction</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1UserDefinedValueCondition" prot="public">openscenario_interpreter::syntax::UserDefinedValueCondition</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Vehicle" prot="public">openscenario_interpreter::syntax::Vehicle</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" prot="public">openscenario_interpreter::syntax::VehicleCategory</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1Waypoint" prot="public">openscenario_interpreter::syntax::Waypoint</innerclass>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1WorldPosition" prot="public">openscenario_interpreter::syntax::WorldPosition</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="controller_8hpp_1a84112bddd6a969ef4d48f604840244a0" prot="public" static="no">
        <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Properties" kindref="compound">Properties</ref></type>
        <definition>using openscenario_interpreter::syntax::DefaultController = typedef Properties</definition>
        <argsstring></argsstring>
        <name>DefaultController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/controller.hpp" line="89" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/controller.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="string_8hpp_1af86241b1a7785ee7d6e79b6ec85a1b49" prot="public" static="no">
        <type>std::string</type>
        <definition>using openscenario_interpreter::syntax::String = typedef std::string</definition>
        <argsstring></argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/string.hpp" line="24" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/string.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="unsigned__integer_8hpp_1a21e4ea2d44394713e6adef67565475f2" prot="public" static="no">
        <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref></type>
        <definition>using openscenario_interpreter::syntax::UnsignedInt = typedef UnsignedInteger</definition>
        <argsstring></argsstring>
        <name>UnsignedInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" line="69" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boolean_8hpp_1aef3bf61b8c9735ae69aa53cc8deab202" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::true_v</definition>
        <argsstring></argsstring>
        <name>true_v</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref>&gt;(true)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="64" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/boolean.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="boolean_8hpp_1af4ed28380d5db65c87391d5f4a1f7c72" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::false_v</definition>
        <argsstring></argsstring>
        <name>false_v</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref>&gt;(false)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/boolean.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1ab1767db61e0a4e186f630b9a436be8c8" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::start_transition</definition>
        <argsstring></argsstring>
        <name>start_transition</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::startTransition)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="192" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a33c97bc65d6759dbc9e8a5cfa5a99357" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::end_transition</definition>
        <argsstring></argsstring>
        <name>end_transition</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::  endTransition)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="193" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1ab451dd8d7d246fda12d3103041a0187d" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::stop_transition</definition>
        <argsstring></argsstring>
        <name>stop_transition</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState:: stopTransition)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="194" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a5e4aa5061de0f9b08b34a77a7b272646" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::skip_transition</definition>
        <argsstring></argsstring>
        <name>skip_transition</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState:: skipTransition)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="195" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a33e6fd463981d6d705af1a872b74d6f1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::complete_state</definition>
        <argsstring></argsstring>
        <name>complete_state</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::  completeState)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="196" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a0a3624b0a479045d7f585aeae6e967a8" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::running_state</definition>
        <argsstring></argsstring>
        <name>running_state</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::   runningState)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="197" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="storyboard__element__state_8hpp_1a54998904aad78e44e7d26cc273803327" prot="public" static="no" mutable="no">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref></type>
        <definition>const Element openscenario_interpreter::syntax::standby_state</definition>
        <argsstring></argsstring>
        <name>standby_state</name>
        <initializer>= make&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref>&gt;(StoryboardElementState::   standbyState)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="198" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="act_8hpp_1a96c7713236ee115d676dd3d51b87d7d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Act &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Act" kindref="compound">Act</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp" line="93" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/act.cpp" bodystart="21" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="action_8hpp_1ab1bc0761e9b5247a0b101c9ab47be8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Action &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Action" kindref="compound">Action</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp" line="97" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/action.cpp" bodystart="22" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="arrow_8hpp_1affb2fef0f4cb36aaefb3f59cb886f940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Arrow &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/arrow.hpp" line="90" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/arrow.cpp" bodystart="23" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="arrow_8hpp_1a8920ddc472372101ce0bddda8a9c389a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, boost::optional&lt; Arrow &gt; &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type>boost::optional&lt; <ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref> &gt; &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/arrow.hpp" line="92" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/arrow.cpp" bodystart="46" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="arrow_8hpp_1a9d3f5dc406364f213c83b39d3b658443" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Arrow &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/arrow.hpp" line="94" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/arrow.cpp" bodystart="69" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1a5bd020705cac977481b0636d863b57cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Axle &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Axle" kindref="compound">Axle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1a23963d428d1f7dfb4998fde69bbafea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const FrontAxle &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1FrontAxle" kindref="compound">FrontAxle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1ac261c0edeabed8d3c9a6703d3b2fbd56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const RearAxle &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1RearAxle" kindref="compound">RearAxle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8hpp_1a9b3069cc87a5efac1c68ff910efe1086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const AdditionalAxle &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1AdditionalAxle" kindref="compound">AdditionalAxle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axle.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axles_8hpp_1af5f3c12c97f5ab6b084b0262a0e1e566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Axles &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Axles" kindref="compound">Axles</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/axles.hpp" line="67" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/axles.cpp" bodystart="21" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="boolean_8hpp_1add210e1d7c3b05a9d8bd201c6e60ad8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Boolean &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="60" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/boolean.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="boolean_8hpp_1ab70f5efcab4967af6bb58e7bf6359880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Boolean &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/boolean.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="boolean_8hpp_1a721c2a3047aa75d12525cd85eda46f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref> &amp;</type>
        <definition>const Element &amp; openscenario_interpreter::syntax::asBoolean</definition>
        <argsstring>(bool)</argsstring>
        <name>asBoolean</name>
        <param>
          <type>bool</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/boolean.hpp" line="67" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/boolean.cpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="bounding__box_8hpp_1a44aa25bf9a0a6005571b35cbc68e1e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const BoundingBox &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1BoundingBox" kindref="compound">BoundingBox</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/bounding_box.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/bounding_box.cpp" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="center_8hpp_1ac2231b5608672b767eb1e8c04d5c4129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Center &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Center" kindref="compound">Center</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/center.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/center.cpp" bodystart="22" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="collision__condition_8hpp_1aa9a13719060bd99aafd6ab55f2037592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const CollisionCondition &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1CollisionCondition" kindref="compound">CollisionCondition</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/collision_condition.hpp" line="85" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/collision_condition.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="color_8hpp_1a9875fdff536297bf3d30228061ecf370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Color &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/color.hpp" line="90" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/color.cpp" bodystart="24" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="color_8hpp_1a5f06607d841fd0833bdba870413b71d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, boost::optional&lt; Color &gt; &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type>boost::optional&lt; <ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref> &gt; &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/color.hpp" line="92" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/color.cpp" bodystart="47" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="color_8hpp_1a8a9838a4d5704759faff8fb879d29990" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Color &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/color.hpp" line="94" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/color.cpp" bodystart="70" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="command_8hpp_1a99fcf33db0bdb31e2797c612374063a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Command &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Command" kindref="compound">Command</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/command.hpp" line="49" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/command.cpp" bodystart="22" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="command_8hpp_1a292d76d0817e3c755566dfd1e53d4788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Command &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Command" kindref="compound">Command</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/command.hpp" line="51" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/command.cpp" bodystart="44" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="condition_8hpp_1a0f87e8ba29931632f7fc43336b01d778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Condition &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Condition" kindref="compound">Condition</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition.hpp" line="76" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/condition.cpp" bodystart="22" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="condition__edge_8hpp_1aa5f9ff06c6aeb283943231699600d07f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, ConditionEdge &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1ConditionEdge" kindref="compound">ConditionEdge</ref> &amp;</type>
          <defname>edge</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_edge.hpp" line="114" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/condition_edge.cpp" bodystart="22" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="condition__edge_8hpp_1aef820893926bfa3b4bb17e8a9bf16b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ConditionEdge &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ConditionEdge" kindref="compound">ConditionEdge</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_edge.hpp" line="116" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/condition_edge.cpp" bodystart="55" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="condition__group_8hpp_1ac64ac5bb491cb7abd2beaf6ec43e0558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const ConditionGroup &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ConditionGroup" kindref="compound">ConditionGroup</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_group.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/condition_group.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="dimensions_8hpp_1ab7b435dea4a6dcec62d4e2a65f8b3491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Dimensions &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Dimensions" kindref="compound">Dimensions</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dimensions.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/dimensions.cpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="double_8hpp_1a08975a4c737d08ce5fcc679d6e9961e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Double &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/double.hpp" line="78" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/double.cpp" bodystart="25" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="double_8hpp_1aec92e1bb60df83a8494e1031fe49517f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Double &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/double.hpp" line="80" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/double.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__dimension_8hpp_1ab21d30fd3ed0a5b8db2c07c0abfbe0dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, DynamicsDimension &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsDimension" kindref="compound">DynamicsDimension</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_dimension.hpp" line="59" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/dynamics_dimension.cpp" bodystart="22" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__dimension_8hpp_1adb3e4f5fd1fca3204f105c749a7a5b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const DynamicsDimension &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsDimension" kindref="compound">DynamicsDimension</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_dimension.hpp" line="61" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/dynamics_dimension.cpp" bodystart="52" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__shape_8hpp_1a8e617d1da8ea9b2021ee237d3b1a35c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, DynamicsShape &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsShape" kindref="compound">DynamicsShape</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_shape.hpp" line="95" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/dynamics_shape.cpp" bodystart="22" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="dynamics__shape_8hpp_1a481caf80d4ae35008d069ff0b2fb51b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const DynamicsShape &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1DynamicsShape" kindref="compound">DynamicsShape</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/dynamics_shape.hpp" line="97" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/dynamics_shape.cpp" bodystart="54" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="entity__object_8hpp_1a7fdd942455745f91328d3aeadd7519d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Result</type>
            <defval>void</defval>
          </param>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto openscenario_interpreter::syntax::apply</definition>
        <argsstring>(Function &amp;&amp;function, const EntityObject &amp;entity_object, Ts &amp;&amp;... xs) -&gt; Result</argsstring>
        <name>apply</name>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1EntityObject" kindref="compound">EntityObject</ref> &amp;</type>
          <declname>entity_object</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/entity_object.hpp" line="57" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/entity_object.hpp" bodystart="57" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="event_8hpp_1a880f802ba6ab49f0d0c8896a6ef3b4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Event &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Event" kindref="compound">Event</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp" line="104" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/event.cpp" bodystart="21" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="init_8hpp_1a63a6dd0d6bc6a1f9d07661bad51f1df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Init &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Init" kindref="compound">Init</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp" line="57" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/init.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="init__actions_8hpp_1a6142eca5e872ce25f3afd49c670681f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const InitActions &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1InitActions" kindref="compound">InitActions</ref> &amp;</type>
          <defname>init_actions</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp" line="86" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/init_actions.cpp" bodystart="22" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="integer_8hpp_1a4147b82ff4b04254232a2e082bf15079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Integer &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Integer" kindref="compound">Integer</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/integer.hpp" line="61" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/integer.cpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="integer_8hpp_1ae8d238a42b1119c999c19d4995cb583f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Integer &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Integer" kindref="compound">Integer</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/integer.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/integer.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="maneuver_8hpp_1aeb54773d873ed99ab847680db686ab93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Maneuver &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Maneuver" kindref="compound">Maneuver</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp" line="89" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/maneuver.cpp" bodystart="21" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="maneuver__group_8hpp_1afc9b254aae01ecd6631a1ef64bcffb68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const ManeuverGroup &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ManeuverGroup" kindref="compound">ManeuverGroup</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp" line="103" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/maneuver_group.cpp" bodystart="21" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="misc__object__category_8hpp_1aa9e5ea47fab0ea251b2ac3bca22d9c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, MiscObjectCategory &amp;) -&gt; std::istream &amp;</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1MiscObjectCategory" kindref="compound">MiscObjectCategory</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/misc_object_category.hpp" line="92" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/misc_object_category.cpp" bodystart="23" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="misc__object__category_8hpp_1ab2eaf00f730b1e78e1055e99f49fcd78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const MiscObjectCategory &amp;) -&gt; std::ostream &amp;</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1MiscObjectCategory" kindref="compound">MiscObjectCategory</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/misc_object_category.hpp" line="94" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/misc_object_category.cpp" bodystart="68" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="openscenario_8hpp_1a667d0ba496f58cfc3f7630f0a1011f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const OpenScenario &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1OpenScenario" kindref="compound">OpenScenario</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="81" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/open_scenario.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="openscenario_8hpp_1ab3fbaf7955e61dfc5dc1c5cd46d5dce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const OpenScenario &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1OpenScenario" kindref="compound">OpenScenario</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp" line="83" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/open_scenario.cpp" bodystart="24" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="parameter__declaration_8hpp_1a5631e2df39464499eec4d43f4e4e0da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const ParameterDeclaration &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclaration" kindref="compound">ParameterDeclaration</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declaration.hpp" line="105" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/parameter_declaration.cpp" bodystart="21" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="parameter__declarations_8hpp_1a938c52a85870201d20057695cc4e7947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const ParameterDeclarations &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterDeclarations" kindref="compound">ParameterDeclarations</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_declarations.hpp" line="49" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/parameter_declarations.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="parameter__type_8hpp_1aea6121c052490b5761f26dfd4ccfb7fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, ParameterType &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterType" kindref="compound">ParameterType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_type.hpp" line="73" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/parameter_type.cpp" bodystart="22" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="parameter__type_8hpp_1a825417dfd950d15e69ba62e3e3b84060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const ParameterType &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterType" kindref="compound">ParameterType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_type.hpp" line="75" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/parameter_type.cpp" bodystart="48" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="pedestrian_8hpp_1ab3b0608abe0be39a45beeb97a5aa0c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Pedestrian &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Pedestrian" kindref="compound">Pedestrian</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian.hpp" line="84" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/pedestrian.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="pedestrian__category_8hpp_1a91552928e5e76084e4871ab2d72ab670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, PedestrianCategory &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1PedestrianCategory" kindref="compound">PedestrianCategory</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian_category.hpp" line="55" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/pedestrian_category.cpp" bodystart="24" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="pedestrian__category_8hpp_1a8b37cb3406ce639b4dbfb78d711b3e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const PedestrianCategory &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1PedestrianCategory" kindref="compound">PedestrianCategory</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/pedestrian_category.hpp" line="57" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/pedestrian_category.cpp" bodystart="55" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="performance_8hpp_1aa78768ba4bb219eff57edecfff843a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Performance &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Performance" kindref="compound">Performance</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/performance.hpp" line="64" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/performance.cpp" bodystart="22" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="position_8hpp_1ae558e840da0a45120aada1871d33275f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Result</type>
            <defval>void</defval>
          </param>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto openscenario_interpreter::syntax::apply</definition>
        <argsstring>(Function &amp;&amp;function, const Position &amp;position, Ts &amp;&amp;... xs) -&gt; Result</argsstring>
        <name>apply</name>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Position" kindref="compound">Position</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>xs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/position.hpp" line="79" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/position.hpp" bodystart="79" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="priority_8hpp_1ab7be63c201a74f834bfe35e77c9ff752" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Priority &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Priority" kindref="compound">Priority</ref> &amp;</type>
          <defname>priority</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/priority.hpp" line="80" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/priority.cpp" bodystart="22" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="priority_8hpp_1a31c47a3a1fa52c7a5c96dcd5a7502f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Priority &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Priority" kindref="compound">Priority</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/priority.hpp" line="82" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/priority.cpp" bodystart="53" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="private_8hpp_1ab0421c59374bca72bb4983e09d04a9d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Private &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Private" kindref="compound">Private</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/private.hpp" line="70" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/private.cpp" bodystart="22" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="reference__context_8hpp_1a280c55487e42f96343025aabca2674d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, ReferenceContext &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1ReferenceContext" kindref="compound">ReferenceContext</ref> &amp;</type>
          <defname>context</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/reference_context.hpp" line="58" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/reference_context.cpp" bodystart="22" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="reference__context_8hpp_1a7e2489add460afb9c4526bde04bc2e03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const ReferenceContext &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ReferenceContext" kindref="compound">ReferenceContext</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/reference_context.hpp" line="60" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/reference_context.cpp" bodystart="52" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="relative__distance__type_8hpp_1ad7f245c54e8b71d0135404e8cba97597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, RelativeDistanceType &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceType" kindref="compound">RelativeDistanceType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/relative_distance_type.hpp" line="60" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/relative_distance_type.cpp" bodystart="24" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="relative__distance__type_8hpp_1a7cdd72bde4fbd45b21d28c4ca2eb2308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const RelativeDistanceType &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1RelativeDistanceType" kindref="compound">RelativeDistanceType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/relative_distance_type.hpp" line="62" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/relative_distance_type.cpp" bodystart="46" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="road__network_8hpp_1af742a4eb898e111ea5687eb86bc9f246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::ASSERT_IS_OPTIONAL_ELEMENT</definition>
        <argsstring>(File)</argsstring>
        <name>ASSERT_IS_OPTIONAL_ELEMENT</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1File" kindref="compound">File</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="road__network_8hpp_1aa13984e6d854e3c4ba778c11f4f9030a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::ASSERT_IS_OPTIONAL_ELEMENT</definition>
        <argsstring>(TrafficSignals)</argsstring>
        <name>ASSERT_IS_OPTIONAL_ELEMENT</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="route__strategy_8hpp_1abd7a173e2e79fc79461ed4f5db928067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, RouteStrategy &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1RouteStrategy" kindref="compound">RouteStrategy</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route_strategy.hpp" line="61" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/route_strategy.cpp" bodystart="22" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="route__strategy_8hpp_1aca998a47b938e2ce06537e75708d4e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const RouteStrategy &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1RouteStrategy" kindref="compound">RouteStrategy</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/route_strategy.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/route_strategy.cpp" bodystart="54" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="rule_8hpp_1ae85af857e643f04e8303f391a00bffa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, Rule &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Rule" kindref="compound">Rule</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/rule.hpp" line="85" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/rule.cpp" bodystart="22" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="rule_8hpp_1a60f25d360897fbdd16a802720f94d63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Rule &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Rule" kindref="compound">Rule</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/rule.hpp" line="87" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/rule.cpp" bodystart="44" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="scenario__definition_8hpp_1a6a7dc7ee6d75a125df2fbf431479bf24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const ScenarioDefinition &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition" kindref="compound">ScenarioDefinition</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp" line="76" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/scenario_definition.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="scenario__definition_8hpp_1acd6b96c5c497fdc3126485b68ad41909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const ScenarioDefinition &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioDefinition" kindref="compound">ScenarioDefinition</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp" line="78" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/scenario_definition.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="scenario__object_8hpp_1a3ba183114617a56b17c045b7ca68a780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const ScenarioObject &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1ScenarioObject" kindref="compound">ScenarioObject</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_object.hpp" line="136" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/scenario_object.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="speed__target__value__type_8hpp_1a1d5cd8d70adcde34ab5fa4a61553fca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, SpeedTargetValueType &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedTargetValueType" kindref="compound">SpeedTargetValueType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_target_value_type.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/speed_target_value_type.cpp" bodystart="24" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="speed__target__value__type_8hpp_1a6cb3020373d5a18c1c4da27b608fdb41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const SpeedTargetValueType &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1SpeedTargetValueType" kindref="compound">SpeedTargetValueType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/speed_target_value_type.hpp" line="67" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/speed_target_value_type.cpp" bodystart="45" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="story_8hpp_1acc620f360e2042b070242f6bb7e45068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Story &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Story" kindref="compound">Story</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp" line="88" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/story.cpp" bodystart="21" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="storyboard_8hpp_1a0c9883903b2960bbd7707c9eb6ae57db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Storyboard &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Storyboard" kindref="compound">Storyboard</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp" line="113" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="storyboard_8hpp_1ab084ae991d90ffdeb239b1329c908f07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Storyboard &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Storyboard" kindref="compound">Storyboard</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp" line="115" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard.cpp" bodystart="23" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__state_8hpp_1a97e91c0ae29ed25a31f04bff0add6ceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, StoryboardElementState &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="187" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="22" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__state_8hpp_1a77f1fa1d89666a3a8eb26799cf68a357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const StoryboardElementState &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementState" kindref="compound">StoryboardElementState</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_state.hpp" line="189" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_state.cpp" bodystart="48" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__type_8hpp_1ab2e6c680128a957c53b5b4e31423844b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, StoryboardElementType &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementType" kindref="compound">StoryboardElementType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_type.hpp" line="61" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_type.cpp" bodystart="22" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="storyboard__element__type_8hpp_1a0c118397b9429cd6cb1ed1763fe5bb39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const StoryboardElementType &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1StoryboardElementType" kindref="compound">StoryboardElementType</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard_element_type.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/storyboard_element_type.cpp" bodystart="47" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="trigger_8hpp_1a461433ef4790cdd7a7970bf3dfc4eea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json &amp;</type>
        <definition>nlohmann::json &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(nlohmann::json &amp;, const Trigger &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>nlohmann::json &amp;</type>
          <defname>json</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Trigger" kindref="compound">Trigger</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/trigger.hpp" line="67" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/trigger.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="triggering__entities__rule_8hpp_1a01157fb3d891a934f33962803a50b0d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, TriggeringEntitiesRule &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntitiesRule" kindref="compound">TriggeringEntitiesRule</ref> &amp;</type>
          <defname>rule</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/triggering_entities_rule.hpp" line="95" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/triggering_entities_rule.cpp" bodystart="22" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="triggering__entities__rule_8hpp_1a055a699d5cabf8c3d3345237294dedd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const TriggeringEntitiesRule &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1TriggeringEntitiesRule" kindref="compound">TriggeringEntitiesRule</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/triggering_entities_rule.hpp" line="97" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/triggering_entities_rule.cpp" bodystart="43" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__integer_8hpp_1a617c597b77dce6fc64bc22c457d646ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, UnsignedInteger &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/unsigned_integer.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__integer_8hpp_1a2211b126e513f14bcc00811afb020103" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const UnsignedInteger &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_integer.hpp" line="67" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/unsigned_integer.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__short_8hpp_1a21765bc2f19346c29f5ecfa04011916b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, UnsignedShort &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" kindref="compound">UnsignedShort</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_short.hpp" line="68" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/unsigned_short.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="unsigned__short_8hpp_1a05aa91483e5122695d3499efb9b7aabe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const UnsignedShort &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" kindref="compound">UnsignedShort</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/unsigned_short.hpp" line="70" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/unsigned_short.cpp" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="vehicle_8hpp_1a47d20191a0a5a75565c2ebd0f76b8978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const Vehicle &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1Vehicle" kindref="compound">Vehicle</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle.hpp" line="94" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle.cpp" bodystart="21" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="vehicle__category_8hpp_1a938917a99573db7278756b763a10dc6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; openscenario_interpreter::syntax::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;, VehicleCategory &amp;)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <defname>is</defname>
        </param>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref> &amp;</type>
          <defname>category</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="71" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp" bodystart="24" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="vehicle__category_8hpp_1a078172ac1c22bfea277e5d5226fde325" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; openscenario_interpreter::syntax::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const VehicleCategory &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="structopenscenario__interpreter_1_1syntax_1_1VehicleCategory" kindref="compound">VehicleCategory</ref> &amp;</type>
          <defname>datum</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/vehicle_category.hpp" line="73" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp" bodystart="62" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="axle_8cpp_1af307d3bd8d6a203b841e1bc6ebef0f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(Axle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1Axle" kindref="compound">Axle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/axle.cpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8cpp_1a13a77c1286cc9a31c9864643cc05ec5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(FrontAxle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1FrontAxle" kindref="compound">FrontAxle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/axle.cpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8cpp_1a5a48dc2e249e0eab35bbcbecd9425ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(RearAxle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1RearAxle" kindref="compound">RearAxle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/axle.cpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="axle_8cpp_1ad5478158f12f86a96f8f6a35771fc5e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openscenario_interpreter::syntax::BOILERPLATE</definition>
        <argsstring>(AdditionalAxle)</argsstring>
        <name>BOILERPLATE</name>
        <param>
          <type><ref refid="structopenscenario__interpreter_1_1syntax_1_1AdditionalAxle" kindref="compound">AdditionalAxle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/axle.cpp" line="36" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/functional/equal_to.hpp" line="26" column="1"/>
  </compounddef>
</doxygen>
