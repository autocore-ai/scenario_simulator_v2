<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="rule_8cpp" kind="file" language="C++">
    <compoundname>rule.cpp</compoundname>
    <includes refid="rule_8hpp" local="no">openscenario_interpreter/syntax/rule.hpp</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="20232">
        <label>list</label>
      </node>
      <node id="20229">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="20223">
        <label>iomanip</label>
      </node>
      <node id="20213">
        <label>functional</label>
      </node>
      <node id="20216">
        <label>limits</label>
      </node>
      <node id="20252">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="20221" relation="include">
        </childnode>
        <childnode refid="20238" relation="include">
        </childnode>
      </node>
      <node id="20256">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="20226">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="20227" relation="include">
        </childnode>
        <childnode refid="20228" relation="include">
        </childnode>
      </node>
      <node id="20212">
        <label>openscenario_interpreter/syntax/rule.hpp</label>
        <link refid="rule_8hpp_source"/>
        <childnode refid="20213" relation="include">
        </childnode>
        <childnode refid="20214" relation="include">
        </childnode>
        <childnode refid="20218" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
        <childnode refid="20245" relation="include">
        </childnode>
      </node>
      <node id="20241">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="20242" relation="include">
        </childnode>
      </node>
      <node id="20268">
        <label>pugixml.hpp</label>
      </node>
      <node id="20231">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="20232" relation="include">
        </childnode>
        <childnode refid="20233" relation="include">
        </childnode>
        <childnode refid="20217" relation="include">
        </childnode>
        <childnode refid="20245" relation="include">
        </childnode>
      </node>
      <node id="20233">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="20234" relation="include">
        </childnode>
      </node>
      <node id="20215">
        <label>cmath</label>
      </node>
      <node id="20230">
        <label>stdexcept</label>
      </node>
      <node id="20240">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="20238" relation="include">
        </childnode>
      </node>
      <node id="20211">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/rule.cpp</label>
        <link refid="rule_8cpp"/>
        <childnode refid="20212" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20258">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="20256" relation="include">
        </childnode>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20259" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20259">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="20227">
        <label>string</label>
      </node>
      <node id="20255">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="20256" relation="include">
        </childnode>
        <childnode refid="20216" relation="include">
        </childnode>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20257" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20238">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="20217" relation="include">
        </childnode>
      </node>
      <node id="20234">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="20235" relation="include">
        </childnode>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20236" relation="include">
        </childnode>
        <childnode refid="20239" relation="include">
        </childnode>
        <childnode refid="20241" relation="include">
        </childnode>
        <childnode refid="20243" relation="include">
        </childnode>
        <childnode refid="20246" relation="include">
        </childnode>
        <childnode refid="20248" relation="include">
        </childnode>
        <childnode refid="20254" relation="include">
        </childnode>
        <childnode refid="20228" relation="include">
        </childnode>
        <childnode refid="20245" relation="include">
        </childnode>
      </node>
      <node id="20249">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="20250" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20269">
        <label>regex</label>
      </node>
      <node id="20246">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="20247" relation="include">
        </childnode>
      </node>
      <node id="20260">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20225">
        <label>exception</label>
      </node>
      <node id="20267">
        <label>ostream</label>
      </node>
      <node id="20264">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="20242">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="20238" relation="include">
        </childnode>
      </node>
      <node id="20224">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="20225" relation="include">
        </childnode>
        <childnode refid="20223" relation="include">
        </childnode>
        <childnode refid="20226" relation="include">
        </childnode>
        <childnode refid="20229" relation="include">
        </childnode>
        <childnode refid="20230" relation="include">
        </childnode>
      </node>
      <node id="20243">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="20244" relation="include">
        </childnode>
        <childnode refid="20245" relation="include">
        </childnode>
      </node>
      <node id="20220">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="20221" relation="include">
        </childnode>
        <childnode refid="20222" relation="include">
        </childnode>
        <childnode refid="20255" relation="include">
        </childnode>
        <childnode refid="20258" relation="include">
        </childnode>
        <childnode refid="20260" relation="include">
        </childnode>
        <childnode refid="20261" relation="include">
        </childnode>
        <childnode refid="20263" relation="include">
        </childnode>
      </node>
      <node id="20218">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="20219" relation="include">
        </childnode>
        <childnode refid="20213" relation="include">
        </childnode>
        <childnode refid="20220" relation="include">
        </childnode>
        <childnode refid="20265" relation="include">
        </childnode>
        <childnode refid="20266" relation="include">
        </childnode>
        <childnode refid="20269" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
        <childnode refid="20270" relation="include">
        </childnode>
      </node>
      <node id="20219">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="20228">
        <label>typeinfo</label>
      </node>
      <node id="20247">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="20238" relation="include">
        </childnode>
      </node>
      <node id="20257">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="20239">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20240" relation="include">
        </childnode>
      </node>
      <node id="20237">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="20238" relation="include">
        </childnode>
      </node>
      <node id="20261">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="20256" relation="include">
        </childnode>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20262" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20251">
        <label>unistd.h</label>
      </node>
      <node id="20222">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="20223" relation="include">
        </childnode>
        <childnode refid="20221" relation="include">
        </childnode>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20231" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20214">
        <label>openscenario_interpreter/functional/equal_to.hpp</label>
        <link refid="equal__to_8hpp_source"/>
        <childnode refid="20215" relation="include">
        </childnode>
        <childnode refid="20213" relation="include">
        </childnode>
        <childnode refid="20216" relation="include">
        </childnode>
        <childnode refid="20217" relation="include">
        </childnode>
      </node>
      <node id="20266">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="20267" relation="include">
        </childnode>
        <childnode refid="20268" relation="include">
        </childnode>
      </node>
      <node id="20245">
        <label>utility</label>
      </node>
      <node id="20265">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="20221" relation="include">
        </childnode>
        <childnode refid="20252" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
        <childnode refid="20245" relation="include">
        </childnode>
      </node>
      <node id="20244">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="20238" relation="include">
        </childnode>
      </node>
      <node id="20221">
        <label>iostream</label>
      </node>
      <node id="20262">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="20270">
        <label>unordered_map</label>
      </node>
      <node id="20236">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="20237" relation="include">
        </childnode>
      </node>
      <node id="20248">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="20249" relation="include">
        </childnode>
        <childnode refid="20252" relation="include">
        </childnode>
        <childnode refid="20226" relation="include">
        </childnode>
        <childnode refid="20253" relation="include">
        </childnode>
      </node>
      <node id="20217">
        <label>type_traits</label>
      </node>
      <node id="20250">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="20251" relation="include">
        </childnode>
        <childnode refid="20221" relation="include">
        </childnode>
      </node>
      <node id="20263">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="20256" relation="include">
        </childnode>
        <childnode refid="20221" relation="include">
        </childnode>
        <childnode refid="20224" relation="include">
        </childnode>
        <childnode refid="20264" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20253">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="20221" relation="include">
        </childnode>
        <childnode refid="20227" relation="include">
        </childnode>
      </node>
      <node id="20235">
        <label>memory</label>
      </node>
      <node id="20254">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="20245" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="rule_8cpp_1a9c8f164b1af96f53e82a3e558461f33f" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>if (buffer == #IDENTIFIER) {      \
    datum.value = Rule::IDENTIFIER; \
    return is;                      \
  }                                 \
  static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/rule.cpp" line="28" column="9"/>
      </memberdef>
      <memberdef kind="define" id="rule_8cpp_1a3c260951a894077cecfbb688a36c8fb3" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>ID</defname></param>
        <initializer>case Rule::ID:        \
    return os &lt;&lt; #ID;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/rule.cpp" line="46" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/rule.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">std::istream<sp/>&amp;<sp/>operator&gt;&gt;(std::istream<sp/>&amp;<sp/>is,<sp/>Rule<sp/>&amp;<sp/>datum)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>is<sp/>&gt;&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOILERPLATE(IDENTIFIER)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/>if<sp/>(buffer<sp/>==<sp/>#IDENTIFIER)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>datum.value<sp/>=<sp/>Rule::IDENTIFIER;<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>is;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>BOILERPLATE(greaterThan);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>BOILERPLATE(lessThan);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>BOILERPLATE(equalTo);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UNEXPECTED_ENUMERATION_VALUE_SPECIFIED(Rule,<sp/>buffer);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">std::ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Rule<sp/>&amp;<sp/>datum)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOILERPLATE(ID)<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>case<sp/>Rule::ID:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>os<sp/>&lt;&lt;<sp/>#ID;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(datum)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(greaterThan);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(lessThan);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(equalTo);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UNEXPECTED_ENUMERATION_VALUE_ASSIGNED(Rule,<sp/>datum);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/rule.cpp"/>
  </compounddef>
</doxygen>
