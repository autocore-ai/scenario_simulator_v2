<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signal__state_8hpp" kind="file" language="C++">
    <compoundname>traffic_signal_state.hpp</compoundname>
    <includes refid="procedure_8hpp" local="no">openscenario_interpreter/procedure.hpp</includes>
    <includes refid="attribute_8hpp" local="no">openscenario_interpreter/reader/attribute.hpp</includes>
    <includes refid="arrow_8hpp" local="no">openscenario_interpreter/syntax/arrow.hpp</includes>
    <includes refid="color_8hpp" local="no">openscenario_interpreter/syntax/color.hpp</includes>
    <includes refid="string_8hpp" local="no">openscenario_interpreter/syntax/string.hpp</includes>
    <includedby refid="phase_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/phase.hpp</includedby>
    <includedby refid="traffic__signal__condition_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_condition.hpp</includedby>
    <incdepgraph>
      <node id="13027">
        <label>list</label>
      </node>
      <node id="13016">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="13022">
        <label>functional</label>
      </node>
      <node id="13012">
        <label>iomanip</label>
      </node>
      <node id="13008">
        <label>limits</label>
      </node>
      <node id="13046">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13032" relation="include">
        </childnode>
      </node>
      <node id="13050">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="13013">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="13014" relation="include">
        </childnode>
        <childnode refid="13015" relation="include">
        </childnode>
      </node>
      <node id="13006">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp"/>
        <childnode refid="13007" relation="include">
        </childnode>
        <childnode refid="13020" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
        <childnode refid="13068" relation="include">
        </childnode>
        <childnode refid="13054" relation="include">
        </childnode>
      </node>
      <node id="13065">
        <label>openscenario_interpreter/syntax/arrow.hpp</label>
        <link refid="arrow_8hpp_source"/>
        <childnode refid="13066" relation="include">
        </childnode>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13067" relation="include">
        </childnode>
      </node>
      <node id="13036">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="13037" relation="include">
        </childnode>
      </node>
      <node id="13062">
        <label>pugixml.hpp</label>
      </node>
      <node id="13026">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="13027" relation="include">
        </childnode>
        <childnode refid="13028" relation="include">
        </childnode>
        <childnode refid="13033" relation="include">
        </childnode>
        <childnode refid="13019" relation="include">
        </childnode>
      </node>
      <node id="13028">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="13029" relation="include">
        </childnode>
      </node>
      <node id="13017">
        <label>stdexcept</label>
      </node>
      <node id="13035">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="13032" relation="include">
        </childnode>
      </node>
      <node id="13052">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="13050" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13053" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13053">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="13014">
        <label>string</label>
      </node>
      <node id="13049">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="13050" relation="include">
        </childnode>
        <childnode refid="13008" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13051" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13067">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
      </node>
      <node id="13032">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="13033" relation="include">
        </childnode>
      </node>
      <node id="13029">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="13009" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13030" relation="include">
        </childnode>
        <childnode refid="13034" relation="include">
        </childnode>
        <childnode refid="13036" relation="include">
        </childnode>
        <childnode refid="13038" relation="include">
        </childnode>
        <childnode refid="13040" relation="include">
        </childnode>
        <childnode refid="13042" relation="include">
        </childnode>
        <childnode refid="13048" relation="include">
        </childnode>
        <childnode refid="13015" relation="include">
        </childnode>
        <childnode refid="13019" relation="include">
        </childnode>
      </node>
      <node id="13043">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="13044" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13063">
        <label>regex</label>
      </node>
      <node id="13040">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="13041" relation="include">
        </childnode>
      </node>
      <node id="13054">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13018">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="13011">
        <label>exception</label>
      </node>
      <node id="13061">
        <label>ostream</label>
      </node>
      <node id="13058">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="13037">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="13032" relation="include">
        </childnode>
      </node>
      <node id="13010">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="13011" relation="include">
        </childnode>
        <childnode refid="13012" relation="include">
        </childnode>
        <childnode refid="13013" relation="include">
        </childnode>
        <childnode refid="13016" relation="include">
        </childnode>
        <childnode refid="13017" relation="include">
        </childnode>
      </node>
      <node id="13068">
        <label>openscenario_interpreter/syntax/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="13066" relation="include">
        </childnode>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13067" relation="include">
        </childnode>
      </node>
      <node id="13038">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13039" relation="include">
        </childnode>
        <childnode refid="13019" relation="include">
        </childnode>
      </node>
      <node id="13023">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13025" relation="include">
        </childnode>
        <childnode refid="13049" relation="include">
        </childnode>
        <childnode refid="13052" relation="include">
        </childnode>
        <childnode refid="13054" relation="include">
        </childnode>
        <childnode refid="13055" relation="include">
        </childnode>
        <childnode refid="13057" relation="include">
        </childnode>
      </node>
      <node id="13020">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="13021" relation="include">
        </childnode>
        <childnode refid="13022" relation="include">
        </childnode>
        <childnode refid="13023" relation="include">
        </childnode>
        <childnode refid="13059" relation="include">
        </childnode>
        <childnode refid="13060" relation="include">
        </childnode>
        <childnode refid="13063" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
        <childnode refid="13064" relation="include">
        </childnode>
      </node>
      <node id="13007">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="13008" relation="include">
        </childnode>
        <childnode refid="13009" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13018" relation="include">
        </childnode>
        <childnode refid="13019" relation="include">
        </childnode>
      </node>
      <node id="13021">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="13015">
        <label>typeinfo</label>
      </node>
      <node id="13041">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="13032" relation="include">
        </childnode>
      </node>
      <node id="13051">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="13034">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13035" relation="include">
        </childnode>
      </node>
      <node id="13031">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13032" relation="include">
        </childnode>
      </node>
      <node id="13055">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="13050" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13056" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13045">
        <label>unistd.h</label>
      </node>
      <node id="13025">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="13012" relation="include">
        </childnode>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13026" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13060">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="13061" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
      </node>
      <node id="13019">
        <label>utility</label>
      </node>
      <node id="13059">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13046" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
        <childnode refid="13019" relation="include">
        </childnode>
      </node>
      <node id="13039">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13032" relation="include">
        </childnode>
      </node>
      <node id="13024">
        <label>iostream</label>
      </node>
      <node id="13056">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="13064">
        <label>unordered_map</label>
      </node>
      <node id="13066">
        <label>boost/optional.hpp</label>
      </node>
      <node id="13030">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13031" relation="include">
        </childnode>
      </node>
      <node id="13042">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="13043" relation="include">
        </childnode>
        <childnode refid="13046" relation="include">
        </childnode>
        <childnode refid="13013" relation="include">
        </childnode>
        <childnode refid="13047" relation="include">
        </childnode>
      </node>
      <node id="13033">
        <label>type_traits</label>
      </node>
      <node id="13044">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="13045" relation="include">
        </childnode>
        <childnode refid="13024" relation="include">
        </childnode>
      </node>
      <node id="13057">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="13050" relation="include">
        </childnode>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13058" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13047">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="13024" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13009">
        <label>memory</label>
      </node>
      <node id="13048">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="13019" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13079">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="13080" relation="include">
        </childnode>
      </node>
      <node id="13076">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="13077" relation="include">
        </childnode>
        <childnode refid="13087" relation="include">
        </childnode>
      </node>
      <node id="13069">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp"/>
        <childnode refid="13070" relation="include">
        </childnode>
        <childnode refid="13096" relation="include">
        </childnode>
      </node>
      <node id="13072">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller_action.hpp</label>
        <link refid="traffic__signal__controller__action_8hpp_source"/>
        <childnode refid="13073" relation="include">
        </childnode>
      </node>
      <node id="13090">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/by_value_condition.hpp</label>
        <link refid="by__value__condition_8hpp_source"/>
        <childnode refid="13091" relation="include">
        </childnode>
      </node>
      <node id="13092">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_group.hpp</label>
        <link refid="condition__group_8hpp_source"/>
        <childnode refid="13093" relation="include">
        </childnode>
      </node>
      <node id="13087">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp</label>
        <link refid="init__actions_8hpp_source"/>
        <childnode refid="13088" relation="include">
        </childnode>
      </node>
      <node id="13091">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition.hpp</label>
        <link refid="condition_8hpp_source"/>
        <childnode refid="13092" relation="include">
        </childnode>
      </node>
      <node id="13082">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="13083" relation="include">
        </childnode>
      </node>
      <node id="13086">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="13074">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/infrastructure_action.hpp</label>
        <link refid="infrastructure__action_8hpp_source"/>
        <childnode refid="13075" relation="include">
        </childnode>
      </node>
      <node id="13089">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller_condition.hpp</label>
        <link refid="traffic__signal__controller__condition_8hpp_source"/>
        <childnode refid="13090" relation="include">
        </childnode>
      </node>
      <node id="13077">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="13078" relation="include">
        </childnode>
      </node>
      <node id="13075">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/global_action.hpp</label>
        <link refid="global__action_8hpp_source"/>
        <childnode refid="13076" relation="include">
        </childnode>
      </node>
      <node id="13095">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</label>
        <link refid="road__network_8hpp_source"/>
        <childnode refid="13083" relation="include">
        </childnode>
      </node>
      <node id="13080">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="13081" relation="include">
        </childnode>
      </node>
      <node id="13085">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13084">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/open_scenario_category.hpp</label>
        <link refid="open__scenario__category_8hpp_source"/>
        <childnode refid="13085" relation="include">
        </childnode>
      </node>
      <node id="13088">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="13082" relation="include">
        </childnode>
      </node>
      <node id="13071">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_controller.hpp</label>
        <link refid="traffic__signal__controller_8hpp_source"/>
        <childnode refid="13072" relation="include">
        </childnode>
        <childnode refid="13089" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13070">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/phase.hpp</label>
        <link refid="phase_8hpp_source"/>
        <childnode refid="13071" relation="include">
        </childnode>
      </node>
      <node id="13081">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="13082" relation="include">
        </childnode>
      </node>
      <node id="13073">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_action.hpp</label>
        <link refid="traffic__signal__action_8hpp_source"/>
        <childnode refid="13074" relation="include">
        </childnode>
      </node>
      <node id="13078">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="13079" relation="include">
        </childnode>
      </node>
      <node id="13096">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_condition.hpp</label>
        <link refid="traffic__signal__condition_8hpp_source"/>
        <childnode refid="13090" relation="include">
        </childnode>
      </node>
      <node id="13083">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp</label>
        <link refid="scenario__definition_8hpp_source"/>
        <childnode refid="13084" relation="include">
        </childnode>
      </node>
      <node id="13094">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp_source"/>
        <childnode refid="13095" relation="include">
        </childnode>
      </node>
      <node id="13093">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/trigger.hpp</label>
        <link refid="trigger_8hpp_source"/>
        <childnode refid="13077" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" prot="public">openscenario_interpreter::syntax::TrafficSignalState</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/procedure.hpp&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>setTrafficSignal(Color|Arrow)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/reader/attribute.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/arrow.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/color.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignalState<sp/>-----------------------------------------------------</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalState&quot;&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;trafficSignalId&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;state&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>LaneletId<sp/>=<sp/>std::int64_t;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>ID<sp/>of<sp/>the<sp/>referenced<sp/>signal<sp/>in<sp/>a<sp/>road<sp/>network.<sp/>The<sp/>signal<sp/>ID<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>listed<sp/>in<sp/>TrafficSignal<sp/>list<sp/>of<sp/>the<sp/>RoadNetwork.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>In<sp/>the<sp/>TierIV<sp/>OpenSCENARIO<sp/>implementation,<sp/>it<sp/>is<sp/>the<sp/>Lanelet<sp/>ID<sp/>(positive</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>integer)<sp/>of<sp/>the<sp/>traffic<sp/>light.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>traffic_signal_id;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>State<sp/>of<sp/>the<sp/>signal.<sp/>The<sp/>available<sp/>states<sp/>are<sp/>listed<sp/>in<sp/>the<sp/>TrafficSignal</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>list<sp/>of<sp/>the<sp/>RoadNetwork.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>state;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Scope&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalState" kindref="compound">TrafficSignalState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>scope)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>:<sp/>traffic_signal_id(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;trafficSignalId&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope)),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>state(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>id()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::lexical_cast&lt;LaneletId&gt;(traffic_signal_id);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>`state:<sp/>none`<sp/>is<sp/>valid<sp/>for<sp/>both<sp/>Arrow<sp/>/<sp/>Color.<sp/>That<sp/>is,<sp/>`state:<sp/>none`</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>changes<sp/>both<sp/>the<sp/>arrow<sp/>signal<sp/>and<sp/>the<sp/>color<sp/>signal<sp/>to<sp/>unlit<sp/>at<sp/>once.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="75"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>color<sp/>=<sp/>boost::lexical_cast&lt;boost::optional&lt;Color&gt;&gt;(state);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color.has_value())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTrafficSignalColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>color.value());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow<sp/>=<sp/>boost::lexical_cast&lt;boost::optional&lt;Arrow&gt;&gt;(state);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrow.has_value())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTrafficSignalArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>arrow.value());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UNEXPECTED_ENUMERATION_VALUE_SPECIFIED(<ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref><sp/>or<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref>,<sp/>state);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state.hpp"/>
  </compounddef>
</doxygen>
