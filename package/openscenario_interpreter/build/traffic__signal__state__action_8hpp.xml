<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signal__state__action_8hpp" kind="file" language="C++">
    <compoundname>traffic_signal_state_action.hpp</compoundname>
    <includes refid="procedure_8hpp" local="no">openscenario_interpreter/procedure.hpp</includes>
    <includes refid="scope_8hpp" local="no">openscenario_interpreter/scope.hpp</includes>
    <includes refid="string_8hpp" local="no">openscenario_interpreter/syntax/string.hpp</includes>
    <includedby refid="traffic__signal__action_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_action.hpp</includedby>
    <incdepgraph>
      <node id="13122">
        <label>list</label>
      </node>
      <node id="13107">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="13112">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="13117">
        <label>functional</label>
      </node>
      <node id="13103">
        <label>iomanip</label>
      </node>
      <node id="13099">
        <label>limits</label>
      </node>
      <node id="13097">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state_action.hpp</label>
        <link refid="traffic__signal__state__action_8hpp"/>
        <childnode refid="13098" relation="include">
        </childnode>
        <childnode refid="13111" relation="include">
        </childnode>
        <childnode refid="13149" relation="include">
        </childnode>
      </node>
      <node id="13141">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13127" relation="include">
        </childnode>
      </node>
      <node id="13145">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="13104">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13106" relation="include">
        </childnode>
      </node>
      <node id="13114">
        <label>openscenario_interpreter/syntax/entity_ref.hpp</label>
        <link refid="entity__ref_8hpp_source"/>
        <childnode refid="13115" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
      <node id="13131">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="13132" relation="include">
        </childnode>
      </node>
      <node id="13157">
        <label>pugixml.hpp</label>
      </node>
      <node id="13121">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="13122" relation="include">
        </childnode>
        <childnode refid="13123" relation="include">
        </childnode>
        <childnode refid="13128" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
      <node id="13123">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="13124" relation="include">
        </childnode>
      </node>
      <node id="13108">
        <label>stdexcept</label>
      </node>
      <node id="13130">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="13127" relation="include">
        </childnode>
      </node>
      <node id="13147">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="13145" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13148" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13148">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="13111">
        <label>openscenario_interpreter/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="13112" relation="include">
        </childnode>
        <childnode refid="13113" relation="include">
        </childnode>
        <childnode refid="13099" relation="include">
        </childnode>
        <childnode refid="13100" relation="include">
        </childnode>
        <childnode refid="13114" relation="include">
        </childnode>
        <childnode refid="13107" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
        <childnode refid="13160" relation="include">
        </childnode>
      </node>
      <node id="13105">
        <label>string</label>
      </node>
      <node id="13144">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="13145" relation="include">
        </childnode>
        <childnode refid="13099" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13146" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13127">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="13128" relation="include">
        </childnode>
      </node>
      <node id="13124">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="13100" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13125" relation="include">
        </childnode>
        <childnode refid="13129" relation="include">
        </childnode>
        <childnode refid="13131" relation="include">
        </childnode>
        <childnode refid="13133" relation="include">
        </childnode>
        <childnode refid="13135" relation="include">
        </childnode>
        <childnode refid="13137" relation="include">
        </childnode>
        <childnode refid="13143" relation="include">
        </childnode>
        <childnode refid="13106" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
      <node id="13138">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="13139" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13158">
        <label>regex</label>
      </node>
      <node id="13135">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="13136" relation="include">
        </childnode>
      </node>
      <node id="13149">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13109">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="13102">
        <label>exception</label>
      </node>
      <node id="13156">
        <label>ostream</label>
      </node>
      <node id="13153">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="13132">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="13127" relation="include">
        </childnode>
      </node>
      <node id="13101">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="13102" relation="include">
        </childnode>
        <childnode refid="13103" relation="include">
        </childnode>
        <childnode refid="13104" relation="include">
        </childnode>
        <childnode refid="13107" relation="include">
        </childnode>
        <childnode refid="13108" relation="include">
        </childnode>
      </node>
      <node id="13133">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13134" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
      <node id="13118">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13120" relation="include">
        </childnode>
        <childnode refid="13144" relation="include">
        </childnode>
        <childnode refid="13147" relation="include">
        </childnode>
        <childnode refid="13149" relation="include">
        </childnode>
        <childnode refid="13150" relation="include">
        </childnode>
        <childnode refid="13152" relation="include">
        </childnode>
      </node>
      <node id="13115">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="13116" relation="include">
        </childnode>
        <childnode refid="13117" relation="include">
        </childnode>
        <childnode refid="13118" relation="include">
        </childnode>
        <childnode refid="13154" relation="include">
        </childnode>
        <childnode refid="13155" relation="include">
        </childnode>
        <childnode refid="13158" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13098">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="13099" relation="include">
        </childnode>
        <childnode refid="13100" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13109" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
      <node id="13116">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="13106">
        <label>typeinfo</label>
      </node>
      <node id="13136">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="13127" relation="include">
        </childnode>
      </node>
      <node id="13146">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="13129">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13130" relation="include">
        </childnode>
      </node>
      <node id="13126">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13127" relation="include">
        </childnode>
      </node>
      <node id="13150">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="13145" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13151" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13140">
        <label>unistd.h</label>
      </node>
      <node id="13160">
        <label>vector</label>
      </node>
      <node id="13120">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="13103" relation="include">
        </childnode>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13121" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13113">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="13155">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13157" relation="include">
        </childnode>
      </node>
      <node id="13110">
        <label>utility</label>
      </node>
      <node id="13154">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13141" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
      <node id="13134">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13127" relation="include">
        </childnode>
      </node>
      <node id="13119">
        <label>iostream</label>
      </node>
      <node id="13151">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="13159">
        <label>unordered_map</label>
      </node>
      <node id="13125">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13126" relation="include">
        </childnode>
      </node>
      <node id="13137">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="13138" relation="include">
        </childnode>
        <childnode refid="13141" relation="include">
        </childnode>
        <childnode refid="13104" relation="include">
        </childnode>
        <childnode refid="13142" relation="include">
        </childnode>
      </node>
      <node id="13128">
        <label>type_traits</label>
      </node>
      <node id="13139">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="13140" relation="include">
        </childnode>
        <childnode refid="13119" relation="include">
        </childnode>
      </node>
      <node id="13152">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="13145" relation="include">
        </childnode>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13142">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13105" relation="include">
        </childnode>
      </node>
      <node id="13100">
        <label>memory</label>
      </node>
      <node id="13143">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="13110" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13168">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="13169" relation="include">
        </childnode>
      </node>
      <node id="13165">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="13166" relation="include">
        </childnode>
        <childnode refid="13176" relation="include">
        </childnode>
      </node>
      <node id="13161">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state_action.hpp</label>
        <link refid="traffic__signal__state__action_8hpp"/>
        <childnode refid="13162" relation="include">
        </childnode>
      </node>
      <node id="13176">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init_actions.hpp</label>
        <link refid="init__actions_8hpp_source"/>
        <childnode refid="13177" relation="include">
        </childnode>
      </node>
      <node id="13171">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="13172" relation="include">
        </childnode>
      </node>
      <node id="13175">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="13163">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/infrastructure_action.hpp</label>
        <link refid="infrastructure__action_8hpp_source"/>
        <childnode refid="13164" relation="include">
        </childnode>
      </node>
      <node id="13166">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="13167" relation="include">
        </childnode>
      </node>
      <node id="13164">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/global_action.hpp</label>
        <link refid="global__action_8hpp_source"/>
        <childnode refid="13165" relation="include">
        </childnode>
      </node>
      <node id="13169">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13174">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="13175" relation="include">
        </childnode>
      </node>
      <node id="13173">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/open_scenario_category.hpp</label>
        <link refid="open__scenario__category_8hpp_source"/>
        <childnode refid="13174" relation="include">
        </childnode>
      </node>
      <node id="13177">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="13171" relation="include">
        </childnode>
      </node>
      <node id="13170">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="13171" relation="include">
        </childnode>
      </node>
      <node id="13162">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_action.hpp</label>
        <link refid="traffic__signal__action_8hpp_source"/>
        <childnode refid="13163" relation="include">
        </childnode>
      </node>
      <node id="13167">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="13168" relation="include">
        </childnode>
      </node>
      <node id="13172">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp</label>
        <link refid="scenario__definition_8hpp_source"/>
        <childnode refid="13173" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalStateAction" prot="public">openscenario_interpreter::syntax::TrafficSignalStateAction</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_ACTION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/procedure.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/scope.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-------------------------------------------------------------------</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>Controls<sp/>the<sp/>state<sp/>of<sp/>a<sp/>traffic<sp/>signal.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalStateAction&quot;&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;name&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;state&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalStateAction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalStateAction" kindref="compound">TrafficSignalStateAction</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>ID<sp/>of<sp/>a<sp/>signal<sp/>in<sp/>a<sp/>road<sp/>network.<sp/>The<sp/>signal<sp/>ID<sp/>must<sp/>be<sp/>listed<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>TrafficSignal<sp/>list<sp/>of<sp/>the<sp/>RoadNetwork.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>In<sp/>the<sp/>TierIV<sp/>OpenSCENARIO<sp/>implementation,<sp/>it<sp/>is<sp/>the<sp/>Lanelet<sp/>ID<sp/>(positive</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>integer)<sp/>of<sp/>the<sp/>traffic<sp/>light.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>----<sp/>NOTE<sp/>-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Targeted<sp/>state<sp/>of<sp/>the<sp/>signal.<sp/>The<sp/>available<sp/>states<sp/>are<sp/>listed<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>TrafficSignal<sp/>list<sp/>of<sp/>the<sp/>RoadNetwork.</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/>*<sp/>------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>state;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalStateAction" kindref="compound">TrafficSignalStateAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>current_scope)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>:<sp/>name(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>current_scope)),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>state(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>current_scope))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>accomplished()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="67"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>color_opt<sp/>=<sp/>boost::lexical_cast&lt;boost::optional&lt;Color&gt;&gt;(state);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color_opt.has_value())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTrafficSignalColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>color_opt.value());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>arrow_opt<sp/>=<sp/>boost::lexical_cast&lt;boost::optional&lt;Arrow&gt;&gt;(state);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrow_opt.has_value())<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTrafficSignalArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">(),<sp/>arrow_opt.value());</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UNEXPECTED_ENUMERATION_VALUE_SPECIFIED(<ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref><sp/>or<sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref>,<sp/>state);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>endsImmediately()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>id()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>std::int64_t<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::lexical_cast&lt;std::int64_t&gt;(name);<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_STATE_ACTION_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_state_action.hpp"/>
  </compounddef>
</doxygen>
