<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="sim__model__interface_8cpp" kind="file" language="C++">
    <compoundname>sim_model_interface.cpp</compoundname>
    <includes refid="sim__model__interface_8hpp" local="no">traffic_simulator/vehicle_model/sim_model_interface.hpp</includes>
    <incdepgraph>
      <node id="7206">
        <label>traffic_simulator/vehicle_model/sim_model_interface.hpp</label>
        <link refid="sim__model__interface_8hpp"/>
        <childnode refid="7207" relation="include">
        </childnode>
        <childnode refid="7208" relation="include">
        </childnode>
      </node>
      <node id="7208">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="7207">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="7205">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/vehicle_model/sim_model_interface.cpp</label>
        <link refid="sim__model__interface_8cpp"/>
        <childnode refid="7206" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Autoware<sp/>Foundation.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="sim__model__interface_8hpp" kindref="compound">traffic_simulator/vehicle_model/sim_model_interface.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="classSimModelInterface_1a8381051dda5ee2907e9bb4249cceb469" kindref="member">SimModelInterface::SimModelInterface</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim_u)<sp/>:<sp/>dim_x_(dim_x),<sp/>dim_u_(dim_u)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>=<sp/>Eigen::VectorXd::Zero(<ref refid="classSimModelInterface_1ada7a7551a27124e1ff650e47e6f18bf1" kindref="member">dim_x_</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="classSimModelInterface_1a604e3dfa204542874cb60bae9df70d97" kindref="member">input_</ref><sp/>=<sp/>Eigen::VectorXd::Zero(<ref refid="classSimModelInterface_1a205b3b7d99b9337365018afe1fc62ab0" kindref="member">dim_u_</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimModelInterface_1a87f7865253cd118372cfc701215cf2df" kindref="member">SimModelInterface::updateRungeKutta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>dt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;<sp/>input)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>k1<sp/>=<sp/>calcModel(<ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref>,<sp/>input);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>k2<sp/>=<sp/>calcModel(<ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>+<sp/>k1<sp/>*<sp/>0.5<sp/>*<sp/>dt,<sp/>input);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>k3<sp/>=<sp/>calcModel(<ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>+<sp/>k2<sp/>*<sp/>0.5<sp/>*<sp/>dt,<sp/>input);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>Eigen::VectorXd<sp/>k4<sp/>=<sp/>calcModel(<ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>+<sp/>k3<sp/>*<sp/>dt,<sp/>input);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>+=<sp/>1.0<sp/>/<sp/>6.0<sp/>*<sp/>(k1<sp/>+<sp/>2.0<sp/>*<sp/>k2<sp/>+<sp/>2.0<sp/>*<sp/>k3<sp/>+<sp/>k4)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimModelInterface_1a99fa9bd160c2969a0f500591ed15f327" kindref="member">SimModelInterface::updateEuler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;<sp/>dt,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;<sp/>input)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>+=<sp/>calcModel(<ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref>,<sp/>input)<sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimModelInterface_1a9c0803727dc5e58c15f51e54e5c23f0d" kindref="member">SimModelInterface::getState</ref>(Eigen::VectorXd<sp/>&amp;<sp/>state)<sp/>{<sp/>state<sp/>=<sp/><ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimModelInterface_1aec1734ae15cfadbe42d35ff3a0eacf1c" kindref="member">SimModelInterface::getInput</ref>(Eigen::VectorXd<sp/>&amp;<sp/>input)<sp/>{<sp/>input<sp/>=<sp/><ref refid="classSimModelInterface_1a604e3dfa204542874cb60bae9df70d97" kindref="member">input_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimModelInterface_1a3753071badd72e8036db7559ce317a97" kindref="member">SimModelInterface::setState</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;<sp/>state)<sp/>{<sp/><ref refid="classSimModelInterface_1ad74e69984c97826011b5a273d3ff9cff" kindref="member">state_</ref><sp/>=<sp/>state;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classSimModelInterface_1a58bf13eb5b2897d599e0ed95c70ea8fe" kindref="member">SimModelInterface::setInput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Eigen::VectorXd<sp/>&amp;<sp/>input)<sp/>{<sp/><ref refid="classSimModelInterface_1a604e3dfa204542874cb60bae9df70d97" kindref="member">input_</ref><sp/>=<sp/>input;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/vehicle_model/sim_model_interface.cpp"/>
  </compounddef>
</doxygen>
