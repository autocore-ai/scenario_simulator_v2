<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="stop__at__traffic__light__action_8cpp" kind="file" language="C++">
    <compoundname>stop_at_traffic_light_action.cpp</compoundname>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes local="no">string</includes>
    <includes refid="vehicle_2behavior__tree_8hpp" local="no">traffic_simulator/behavior/vehicle/behavior_tree.hpp</includes>
    <includes refid="stop__at__traffic__light__action_8hpp" local="no">traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.hpp</includes>
    <includes refid="catmull__rom__spline_8hpp" local="no">traffic_simulator/math/catmull_rom_spline.hpp</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="5152">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="5199">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
        <childnode refid="5200" relation="include">
        </childnode>
        <childnode refid="5201" relation="include">
        </childnode>
        <childnode refid="5202" relation="include">
        </childnode>
      </node>
      <node id="5233">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="5218">
        <label>iomanip</label>
      </node>
      <node id="5157">
        <label>functional</label>
      </node>
      <node id="5215">
        <label>queue</label>
      </node>
      <node id="5221">
        <label>limits</label>
      </node>
      <node id="5181">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="5214">
        <label>openscenario_msgs/msg/entity_type.hpp</label>
      </node>
      <node id="5225">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="5156">
        <label>behaviortree_cpp_v3/loggers/bt_cout_logger.h</label>
      </node>
      <node id="5204">
        <label>traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.hpp</label>
        <link refid="stop__at__traffic__light__action_8hpp_source"/>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5205" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5180">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="5163">
        <label>openscenario_msgs/msg/waypoints_array.hpp</label>
      </node>
      <node id="5172">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="5226">
        <label>traffic_simulator/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5152" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5197" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5167">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="5217">
        <label>autoware_perception_msgs/msg/traffic_light_state_array.hpp</label>
      </node>
      <node id="5209">
        <label>traffic_simulator/behavior/action_node.hpp</label>
        <link refid="action__node_8hpp_source"/>
        <childnode refid="5206" relation="include">
        </childnode>
        <childnode refid="5210" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5162" relation="include">
        </childnode>
        <childnode refid="5163" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5211" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5188" relation="include">
        </childnode>
        <childnode refid="5216" relation="include">
        </childnode>
        <childnode refid="5198" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5161">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="5234">
        <label>pugixml.hpp</label>
      </node>
      <node id="5200">
        <label>autoware_perception_msgs/msg/lamp_state.hpp</label>
      </node>
      <node id="5231">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="5193">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="5230">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="5208">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="5223">
        <label>cassert</label>
      </node>
      <node id="5202">
        <label>stdexcept</label>
      </node>
      <node id="5151">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.cpp</label>
        <link refid="stop__at__traffic__light__action_8cpp"/>
        <childnode refid="5152" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5154" relation="include">
        </childnode>
        <childnode refid="5204" relation="include">
        </childnode>
        <childnode refid="5188" relation="include">
        </childnode>
        <childnode refid="5197" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5155">
        <label>behaviortree_cpp_v3/bt_factory.h</label>
      </node>
      <node id="5153">
        <label>string</label>
      </node>
      <node id="5162">
        <label>openscenario_msgs/msg/obstacle.hpp</label>
      </node>
      <node id="5184">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="5186">
        <label>traffic_simulator/hdmap_utils/cache.hpp</label>
        <link refid="cache_8hpp_source"/>
        <childnode refid="5179" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5187" relation="include">
        </childnode>
        <childnode refid="5152" relation="include">
        </childnode>
        <childnode refid="5188" relation="include">
        </childnode>
        <childnode refid="5198" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5159">
        <label>map</label>
      </node>
      <node id="5190">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="5191" relation="include">
        </childnode>
        <childnode refid="5192" relation="include">
        </childnode>
        <childnode refid="5179" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5193" relation="include">
        </childnode>
        <childnode refid="5194" relation="include">
        </childnode>
        <childnode refid="5195" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5222">
        <label>traffic_simulator/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="5223" relation="include">
        </childnode>
        <childnode refid="5224" relation="include">
        </childnode>
        <childnode refid="5159" relation="include">
        </childnode>
        <childnode refid="5225" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
      </node>
      <node id="5213">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="5229">
        <label>traffic_simulator/entity/vehicle_parameter.hpp</label>
        <link refid="vehicle__parameter_8hpp_source"/>
        <childnode refid="5230" relation="include">
        </childnode>
        <childnode refid="5231" relation="include">
        </childnode>
        <childnode refid="5232" relation="include">
        </childnode>
        <childnode refid="5233" relation="include">
        </childnode>
        <childnode refid="5194" relation="include">
        </childnode>
        <childnode refid="5213" relation="include">
        </childnode>
        <childnode refid="5208" relation="include">
        </childnode>
        <childnode refid="5234" relation="include">
        </childnode>
        <childnode refid="5185" relation="include">
        </childnode>
        <childnode refid="5235" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
      </node>
      <node id="5185">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="5171">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="5176">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="5164">
        <label>traffic_simulator/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="5165" relation="include">
        </childnode>
        <childnode refid="5166" relation="include">
        </childnode>
        <childnode refid="5167" relation="include">
        </childnode>
        <childnode refid="5168" relation="include">
        </childnode>
        <childnode refid="5169" relation="include">
        </childnode>
        <childnode refid="5170" relation="include">
        </childnode>
        <childnode refid="5171" relation="include">
        </childnode>
        <childnode refid="5172" relation="include">
        </childnode>
        <childnode refid="5173" relation="include">
        </childnode>
        <childnode refid="5174" relation="include">
        </childnode>
        <childnode refid="5175" relation="include">
        </childnode>
        <childnode refid="5176" relation="include">
        </childnode>
        <childnode refid="5177" relation="include">
        </childnode>
        <childnode refid="5178" relation="include">
        </childnode>
        <childnode refid="5179" relation="include">
        </childnode>
        <childnode refid="5180" relation="include">
        </childnode>
        <childnode refid="5181" relation="include">
        </childnode>
        <childnode refid="5182" relation="include">
        </childnode>
        <childnode refid="5183" relation="include">
        </childnode>
        <childnode refid="5184" relation="include">
        </childnode>
        <childnode refid="5159" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5161" relation="include">
        </childnode>
        <childnode refid="5185" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5186" relation="include">
        </childnode>
        <childnode refid="5190" relation="include">
        </childnode>
        <childnode refid="5199" relation="include">
        </childnode>
        <childnode refid="5198" relation="include">
        </childnode>
        <childnode refid="5197" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
        <childnode refid="5203" relation="include">
        </childnode>
      </node>
      <node id="5189">
        <label>exception</label>
      </node>
      <node id="5227">
        <label>traffic_simulator/helper/stop_watch.hpp</label>
        <link refid="stop__watch_8hpp_source"/>
        <childnode refid="5179" relation="include">
        </childnode>
        <childnode refid="5228" relation="include">
        </childnode>
        <childnode refid="5201" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
      </node>
      <node id="5165">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="5207">
        <label>openscenario_msgs/msg/driver_model.hpp</label>
      </node>
      <node id="5194">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="5220">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="5170">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="5183">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="5192">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="5206">
        <label>behaviortree_cpp_v3/action_node.h</label>
      </node>
      <node id="5182">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="5158">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="5224">
        <label>cstdio</label>
      </node>
      <node id="5210">
        <label>boost/algorithm/clamp.hpp</label>
      </node>
      <node id="5196">
        <label>vector</label>
      </node>
      <node id="5178">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="5191">
        <label>gtest/gtest.h</label>
      </node>
      <node id="5212">
        <label>autoware_vehicle_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="5197">
        <label>utility</label>
      </node>
      <node id="5235">
        <label>sstream</label>
      </node>
      <node id="5154">
        <label>traffic_simulator/behavior/vehicle/behavior_tree.hpp</label>
        <link refid="vehicle_2behavior__tree_8hpp_source"/>
        <childnode refid="5155" relation="include">
        </childnode>
        <childnode refid="5156" relation="include">
        </childnode>
        <childnode refid="5157" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5159" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5161" relation="include">
        </childnode>
        <childnode refid="5162" relation="include">
        </childnode>
        <childnode refid="5163" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5195">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5174">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="5188">
        <label>traffic_simulator/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="5189" relation="include">
        </childnode>
        <childnode refid="5158" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5190" relation="include">
        </childnode>
        <childnode refid="5197" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5169">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="5232">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="5201">
        <label>iostream</label>
      </node>
      <node id="5205">
        <label>traffic_simulator/behavior/vehicle/vehicle_action_node.hpp</label>
        <link refid="vehicle__action__node_8hpp_source"/>
        <childnode refid="5206" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5207" relation="include">
        </childnode>
        <childnode refid="5162" relation="include">
        </childnode>
        <childnode refid="5208" relation="include">
        </childnode>
        <childnode refid="5163" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5209" relation="include">
        </childnode>
        <childnode refid="5229" relation="include">
        </childnode>
        <childnode refid="5227" relation="include">
        </childnode>
        <childnode refid="5188" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5166">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="5219">
        <label>traffic_simulator/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="5220" relation="include">
        </childnode>
        <childnode refid="5201" relation="include">
        </childnode>
        <childnode refid="5221" relation="include">
        </childnode>
        <childnode refid="5202" relation="include">
        </childnode>
        <childnode refid="5222" relation="include">
        </childnode>
        <childnode refid="5226" relation="include">
        </childnode>
        <childnode refid="5199" relation="include">
        </childnode>
        <childnode refid="5198" relation="include">
        </childnode>
        <childnode refid="5197" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
      </node>
      <node id="5216">
        <label>traffic_simulator/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp_source"/>
        <childnode refid="5217" relation="include">
        </childnode>
        <childnode refid="5218" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5185" relation="include">
        </childnode>
        <childnode refid="5202" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5219" relation="include">
        </childnode>
        <childnode refid="5198" relation="include">
        </childnode>
        <childnode refid="5197" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
        <childnode refid="5203" relation="include">
        </childnode>
      </node>
      <node id="5198">
        <label>unordered_map</label>
      </node>
      <node id="5177">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="5203">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="5211">
        <label>traffic_simulator/entity/entity_base.hpp</label>
        <link refid="entity__base_8hpp_source"/>
        <childnode refid="5212" relation="include">
        </childnode>
        <childnode refid="5179" relation="include">
        </childnode>
        <childnode refid="5160" relation="include">
        </childnode>
        <childnode refid="5213" relation="include">
        </childnode>
        <childnode refid="5207" relation="include">
        </childnode>
        <childnode refid="5161" relation="include">
        </childnode>
        <childnode refid="5214" relation="include">
        </childnode>
        <childnode refid="5162" relation="include">
        </childnode>
        <childnode refid="5208" relation="include">
        </childnode>
        <childnode refid="5163" relation="include">
        </childnode>
        <childnode refid="5215" relation="include">
        </childnode>
        <childnode refid="5153" relation="include">
        </childnode>
        <childnode refid="5164" relation="include">
        </childnode>
        <childnode refid="5216" relation="include">
        </childnode>
        <childnode refid="5198" relation="include">
        </childnode>
        <childnode refid="5196" relation="include">
        </childnode>
        <childnode refid="5203" relation="include">
        </childnode>
      </node>
      <node id="5187">
        <label>mutex</label>
      </node>
      <node id="5168">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="5173">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="5228">
        <label>chrono</label>
      </node>
      <node id="5179">
        <label>boost/optional.hpp</label>
      </node>
      <node id="5175">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="5160">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceentity__behavior">entity_behavior</innernamespace>
    <innernamespace refid="namespaceentity__behavior_1_1vehicle">entity_behavior::vehicle</innernamespace>
    <innernamespace refid="namespaceentity__behavior_1_1vehicle_1_1follow__lane__sequence">entity_behavior::vehicle::follow_lane_sequence</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/behavior/vehicle/behavior_tree.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/math/catmull_rom_spline.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceentity__behavior" kindref="compound">entity_behavior</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vehicle</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">follow_lane_sequence</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal">StopAtTrafficLightAction::StopAtTrafficLightAction(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BT::NodeConfiguration<sp/>&amp;<sp/>config)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">:<sp/><ref refid="namespaceentity__behavior" kindref="compound">entity_behavior</ref>::VehicleActionNode(name,<sp/>config)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::optional&lt;openscenario_msgs::msg::Obstacle&gt;<sp/>StopAtTrafficLightAction::calculateObstacle(</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::WaypointsArray<sp/>&amp;<sp/>waypoints)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distance_to_stop_target_)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::none;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_to_stop_target_.get()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::none;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref><sp/>spline(waypoints.waypoints);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_to_stop_target_.get()<sp/>&gt;<sp/>spline.getLength())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::none;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::Obstacle<sp/>obstacle;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>obstacle.type<sp/>=<sp/>obstacle.ENTITY;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>obstacle.s<sp/>=<sp/>distance_to_stop_target_.get();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obstacle;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::WaypointsArray<sp/>StopAtTrafficLightAction::calculateWaypoints()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_status.lanelet_pose_valid)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>THROW_SIMULATION_ERROR(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>assign<sp/>lane&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entity_status.action_status.twist.linear.x<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::WaypointsArray<sp/>waypoints;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref><sp/>spline(<ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;getCenterPoints(route_lanelets));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>waypoints.waypoints<sp/>=<sp/>spline.getTrajectory(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>entity_status.lanelet_pose.s,<sp/>entity_status.lanelet_pose.s<sp/>+<sp/>getHorizon(),<sp/>1.0);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>waypoints;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::WaypointsArray();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">boost::optional&lt;double&gt;<sp/>StopAtTrafficLightAction::calculateTargetSpeed(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_velocity)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distance_to_stop_target_)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::none;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rest_distance<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>distance_to_stop_target_.get()<sp/>-<sp/>(vehicle_parameters.bounding_box.dimensions.x<sp/>+<sp/>3);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest_distance<sp/>&lt;<sp/>calculateStopDistance())<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rest_distance<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::sqrt(2<sp/>*<sp/>5<sp/>*<sp/>rest_distance);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_velocity;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">BT::NodeStatus<sp/>StopAtTrafficLightAction::tick()</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>getBlackBoardValues();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>request<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;follow_lane&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!entity_status.lanelet_pose_valid)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!driver_model.see_around)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getRightOfWayEntities(route_lanelets).size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>waypoints<sp/>=<sp/>calculateWaypoints();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(waypoints.waypoints.empty())<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(waypoints.waypoints);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distance_to_traffic_stop_line<sp/>=</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehdmap__utils" kindref="compound">hdmap_utils</ref>-&gt;getDistanceToTrafficLightStopLine(route_lanelets,<sp/>waypoints.waypoints);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distance_to_traffic_stop_line)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>distance_to_stop_target_<sp/>=<sp/>getDistanceToTrafficLightStopLine(route_lanelets,<sp/>waypoints.waypoints);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>boost::optional&lt;double&gt;<sp/>target_linear_speed;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_to_stop_target_)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance_to_stop_target_.get()<sp/>&gt;<sp/>getHorizon())<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>target_linear_speed<sp/>=<sp/>calculateTargetSpeed(entity_status.action_status.twist.linear.x);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::FAILURE;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!distance_to_stop_target_)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;updated_status&quot;</highlight><highlight class="normal">,<sp/>calculateEntityStatusUpdated(0));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obstacle<sp/>=<sp/>calculateObstacle(waypoints);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;waypoints&quot;</highlight><highlight class="normal">,<sp/>waypoints);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;obstacle&quot;</highlight><highlight class="normal">,<sp/>obstacle);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::SUCCESS;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target_speed)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target_speed.get()<sp/>&gt;<sp/>target_linear_speed.get())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target_speed<sp/>=<sp/>target_linear_speed.get();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>target_speed<sp/>=<sp/>target_linear_speed.get();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;updated_status&quot;</highlight><highlight class="normal">,<sp/>calculateEntityStatusUpdated(target_speed.get()));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obstacle<sp/>=<sp/>calculateObstacle(waypoints);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;waypoints&quot;</highlight><highlight class="normal">,<sp/>waypoints);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>setOutput(</highlight><highlight class="stringliteral">&quot;obstacle&quot;</highlight><highlight class="normal">,<sp/>obstacle);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BT::NodeStatus::RUNNING;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>follow_lane_sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>vehicle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>entity_behavior</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.cpp"/>
  </compounddef>
</doxygen>
