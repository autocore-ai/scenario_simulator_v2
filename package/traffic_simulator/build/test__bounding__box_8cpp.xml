<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__bounding__box_8cpp" kind="file" language="C++">
    <compoundname>test_bounding_box.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes refid="bounding__box_8hpp" local="no">traffic_simulator/math/bounding_box.hpp</includes>
    <incdepgraph>
      <node id="7230">
        <label>traffic_simulator/math/bounding_box.hpp</label>
        <link refid="bounding__box_8hpp_source"/>
        <childnode refid="7231" relation="include">
        </childnode>
        <childnode refid="7232" relation="include">
        </childnode>
        <childnode refid="7233" relation="include">
        </childnode>
        <childnode refid="7234" relation="include">
        </childnode>
        <childnode refid="7235" relation="include">
        </childnode>
        <childnode refid="7236" relation="include">
        </childnode>
        <childnode refid="7237" relation="include">
        </childnode>
        <childnode refid="7238" relation="include">
        </childnode>
        <childnode refid="7239" relation="include">
        </childnode>
        <childnode refid="7240" relation="include">
        </childnode>
      </node>
      <node id="7229">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="7238">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="7239">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="7236">
        <label>boost/geometry/geometries/point_xy.hpp</label>
      </node>
      <node id="7231">
        <label>boost/assert.hpp</label>
      </node>
      <node id="7227">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp</label>
        <link refid="test__bounding__box_8cpp"/>
        <childnode refid="7228" relation="include">
        </childnode>
        <childnode refid="7229" relation="include">
        </childnode>
        <childnode refid="7230" relation="include">
        </childnode>
      </node>
      <node id="7232">
        <label>boost/assign/list_of.hpp</label>
      </node>
      <node id="7240">
        <label>vector</label>
      </node>
      <node id="7228">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7234">
        <label>boost/geometry/algorithms/disjoint.hpp</label>
      </node>
      <node id="7237">
        <label>boost/optional.hpp</label>
      </node>
      <node id="7235">
        <label>boost/geometry/geometries/linestring.hpp</label>
      </node>
      <node id="7233">
        <label>boost/geometry.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__bounding__box_8cpp_1a33d8552ffaf352e5b3cc665c5bcf0ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BoundigBox, GetPolygonDistanceWithCollision)</argsstring>
        <name>TEST</name>
        <param>
          <type>BoundigBox</type>
        </param>
        <param>
          <type>GetPolygonDistanceWithCollision</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp" line="20" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp" bodystart="20" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="test__bounding__box_8cpp_1a8a2d32aa10d7e1f5e53daa11fabad298" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(BoundigBox, GetPolygonDistanceWithoutCollision)</argsstring>
        <name>TEST</name>
        <param>
          <type>BoundigBox</type>
        </param>
        <param>
          <type>GetPolygonDistanceWithoutCollision</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp" line="35" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp" bodystart="35" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="test__bounding__box_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp" line="53" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/math/bounding_box.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">TEST(BoundigBox,<sp/>GetPolygonDistanceWithCollision)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>bbox0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>bbox0.dimensions.x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>bbox0.dimensions.y<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>bbox0.dimensions.z<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>bbox1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>bbox1.dimensions.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>bbox1.dimensions.y<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>bbox1.dimensions.z<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>EXPECT_EQ(traffic_simulator::math::getPolygonDistance(pose0,<sp/>bbox0,<sp/>pose1,<sp/>bbox1),<sp/>boost::none);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">TEST(BoundigBox,<sp/>GetPolygonDistanceWithoutCollision)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>bbox0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>bbox0.dimensions.x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>bbox0.dimensions.y<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>bbox0.dimensions.z<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>pose1.position.y<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>bbox1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>bbox1.dimensions.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>bbox1.dimensions.y<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>bbox1.dimensions.z<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(traffic_simulator::math::getPolygonDistance(pose0,<sp/>bbox0,<sp/>pose1,<sp/>bbox1));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>traffic_simulator::math::getPolygonDistance(pose0,<sp/>bbox0,<sp/>pose1,<sp/>bbox1).</highlight><highlight class="keyword">get</highlight><highlight class="normal">(),<sp/>3.0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_bounding_box.cpp"/>
  </compounddef>
</doxygen>
