<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__catmull__rom__spline_8cpp" kind="file" language="C++">
    <compoundname>test_catmull_rom_spline.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes refid="catmull__rom__spline_8hpp" local="no">traffic_simulator/math/catmull_rom_spline.hpp</includes>
    <incdepgraph>
      <node id="7244">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="7252">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="7248">
        <label>string</label>
      </node>
      <node id="7249">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="7243" relation="include">
        </childnode>
        <childnode refid="7250" relation="include">
        </childnode>
        <childnode refid="7251" relation="include">
        </childnode>
        <childnode refid="7247" relation="include">
        </childnode>
        <childnode refid="7252" relation="include">
        </childnode>
        <childnode refid="7253" relation="include">
        </childnode>
        <childnode refid="7254" relation="include">
        </childnode>
        <childnode refid="7255" relation="include">
        </childnode>
      </node>
      <node id="7246">
        <label>exception</label>
      </node>
      <node id="7253">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="7242">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp</label>
        <link refid="test__catmull__rom__spline_8cpp"/>
        <childnode refid="7243" relation="include">
        </childnode>
        <childnode refid="7244" relation="include">
        </childnode>
        <childnode refid="7245" relation="include">
        </childnode>
      </node>
      <node id="7250">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="7247">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="7255">
        <label>vector</label>
      </node>
      <node id="7243">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7256">
        <label>utility</label>
      </node>
      <node id="7254">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="7255" relation="include">
        </childnode>
      </node>
      <node id="7245">
        <label>traffic_simulator/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="7246" relation="include">
        </childnode>
        <childnode refid="7247" relation="include">
        </childnode>
        <childnode refid="7248" relation="include">
        </childnode>
        <childnode refid="7249" relation="include">
        </childnode>
        <childnode refid="7256" relation="include">
        </childnode>
        <childnode refid="7255" relation="include">
        </childnode>
      </node>
      <node id="7251">
        <label>boost/optional.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1ad0dab0cd6ad149bff77d3bc99b898d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, GetCollisionPointIn2D)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>GetCollisionPointIn2D</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="20" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="20" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1ac696c49d2c0fef18fcd96a907dfd820a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, Maximum2DCurvature)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>Maximum2DCurvature</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="56" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="56" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1aeede809a2138430b014ce93a76a99e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, Interpolate3Points)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>Interpolate3Points</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="71" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="71" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1abbdff0559a229304a5d0f4af8caff7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, Interpolate4Points)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>Interpolate4Points</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="87" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="87" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1af2c56c0c16af7f7c680ea1701f1997cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, GetPoint)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>GetPoint</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="106" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="106" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1a72f149a5b53ac58420ec4d52dd47958e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, GetSValue)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>GetSValue</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="126" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="126" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1ae84f082d20dcd31e793094f379d22701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, GetTrajectory)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>GetTrajectory</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="151" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="151" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1ad8374707e090df3119cb8da3d2886045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(CatmullRomSpline, CheckThrowingErrorWhenTheControlPointisAreNotEnough)</argsstring>
        <name>TEST</name>
        <param>
          <type>CatmullRomSpline</type>
        </param>
        <param>
          <type>CheckThrowingErrorWhenTheControlPointisAreNotEnough</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="176" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="176" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="test__catmull__rom__spline_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" line="186" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp" bodystart="186" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/math/catmull_rom_spline.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">TEST(CatmullRomSpline,<sp/>GetCollisionPointIn2D)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(spline.getLength(),<sp/>2);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>start;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>start.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>start.y<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>goal;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>goal.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>goal.y<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>collision_s<sp/>=<sp/>spline.getCollisionPointIn2D(start,<sp/>goal,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(collision_s);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision_s)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(collision_s.get(),<sp/>0.1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>collision_s<sp/>=<sp/>spline.getCollisionPointIn2D({start,<sp/>goal},<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision_s)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(collision_s.get(),<sp/>0.1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>collision_s<sp/>=<sp/>spline.getCollisionPointIn2D(start,<sp/>goal,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(collision_s);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision_s)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(collision_s.get(),<sp/>0.1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>collision_s<sp/>=<sp/>spline.getCollisionPointIn2D({start,<sp/>goal},<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collision_s)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_DOUBLE_EQ(collision_s.get(),<sp/>0.1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">TEST(CatmullRomSpline,<sp/>Maximum2DCurvature)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>p1.y<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>p2.y<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(spline.getMaximum2DCurvature(),<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">TEST(CatmullRomSpline,<sp/>Interpolate3Points)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>p1.y<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>p2.y<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p3;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>p3.x<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>p3.y<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2,<sp/>p3};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points));</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">TEST(CatmullRomSpline,<sp/>Interpolate4Points)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>p1.y<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>p2.y<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p3;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>p3.x<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>p3.y<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p4;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>p4.x<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>p4.y<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points));</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">TEST(CatmullRomSpline,<sp/>GetPoint)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p3;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>p3.x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p4;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>p4.x<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2,<sp/>p3,<sp/>p4};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(spline.getLength(),<sp/>4);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>point<sp/>=<sp/>spline.getPoint(3);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(point.x,<sp/>3);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(point.y,<sp/>0);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(point.z,<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">TEST(CatmullRomSpline,<sp/>GetSValue)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p3;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>p3.x<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2,<sp/>p3};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>p.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(spline.getSValue(p));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;result<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>spline.getSValue(p).get()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(spline.getSValue(p).get()<sp/>&gt;<sp/>0.099);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(spline.getSValue(p).get()<sp/>&lt;<sp/>0.101);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>p.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(spline.getSValue(p,<sp/>3));</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">TEST(CatmullRomSpline,<sp/>GetTrajectory)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>p1.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p2;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>p2.x<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p3;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>p3.x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>points<sp/>=<sp/>{p0,<sp/>p1,<sp/>p2,<sp/>p3};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>spline<sp/>=<sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(points);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trajectory<sp/>=<sp/>spline.getTrajectory(0,<sp/>3,<sp/>1.0);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>EXPECT_EQ(trajectory.size(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(4));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[0].x,<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[1].x,<sp/>1);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[2].x,<sp/>2);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[3].x,<sp/>3);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>trajectory<sp/>=<sp/>spline.getTrajectory(3,<sp/>0,<sp/>1.0);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>EXPECT_EQ(trajectory.size(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(4));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[0].x,<sp/>3);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[1].x,<sp/>2);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[2].x,<sp/>1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(trajectory[3].x,<sp/>0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">TEST(CatmullRomSpline,<sp/>CheckThrowingErrorWhenTheControlPointisAreNotEnough)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>EXPECT_THROW(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(std::vector&lt;geometry_msgs::msg::Point&gt;(0)),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>common::SemanticError);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>EXPECT_THROW(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref>(std::vector&lt;geometry_msgs::msg::Point&gt;(1)),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>common::SemanticError);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_catmull_rom_spline.cpp"/>
  </compounddef>
</doxygen>
