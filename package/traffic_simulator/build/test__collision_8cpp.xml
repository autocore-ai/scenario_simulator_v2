<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__collision_8cpp" kind="file" language="C++">
    <compoundname>test_collision.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes refid="collision_8hpp" local="no">traffic_simulator/math/collision.hpp</includes>
    <incdepgraph>
      <node id="7264">
        <label>traffic_simulator/math/bounding_box.hpp</label>
        <link refid="bounding__box_8hpp_source"/>
        <childnode refid="7265" relation="include">
        </childnode>
        <childnode refid="7266" relation="include">
        </childnode>
        <childnode refid="7267" relation="include">
        </childnode>
        <childnode refid="7268" relation="include">
        </childnode>
        <childnode refid="7269" relation="include">
        </childnode>
        <childnode refid="7270" relation="include">
        </childnode>
        <childnode refid="7271" relation="include">
        </childnode>
        <childnode refid="7262" relation="include">
        </childnode>
        <childnode refid="7263" relation="include">
        </childnode>
        <childnode refid="7272" relation="include">
        </childnode>
      </node>
      <node id="7260">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="7262">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="7263">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="7270">
        <label>boost/geometry/geometries/point_xy.hpp</label>
      </node>
      <node id="7261">
        <label>traffic_simulator/math/collision.hpp</label>
        <link refid="collision_8hpp_source"/>
        <childnode refid="7262" relation="include">
        </childnode>
        <childnode refid="7263" relation="include">
        </childnode>
        <childnode refid="7264" relation="include">
        </childnode>
        <childnode refid="7272" relation="include">
        </childnode>
      </node>
      <node id="7265">
        <label>boost/assert.hpp</label>
      </node>
      <node id="7258">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp</label>
        <link refid="test__collision_8cpp"/>
        <childnode refid="7259" relation="include">
        </childnode>
        <childnode refid="7260" relation="include">
        </childnode>
        <childnode refid="7261" relation="include">
        </childnode>
      </node>
      <node id="7266">
        <label>boost/assign/list_of.hpp</label>
      </node>
      <node id="7272">
        <label>vector</label>
      </node>
      <node id="7259">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7268">
        <label>boost/geometry/algorithms/disjoint.hpp</label>
      </node>
      <node id="7271">
        <label>boost/optional.hpp</label>
      </node>
      <node id="7269">
        <label>boost/geometry/geometries/linestring.hpp</label>
      </node>
      <node id="7267">
        <label>boost/geometry.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__collision_8cpp_1aeb4055dd1a1dfbd2c11428900f514fcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Collision, DifferentHeight)</argsstring>
        <name>TEST</name>
        <param>
          <type>Collision</type>
        </param>
        <param>
          <type>DifferentHeight</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" line="20" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" bodystart="20" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="test__collision_8cpp_1a73981572860b04ab8a654e8f2a67c98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Collision, SamePosition)</argsstring>
        <name>TEST</name>
        <param>
          <type>Collision</type>
        </param>
        <param>
          <type>SamePosition</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" line="32" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="test__collision_8cpp_1af66f3dbb95976fdea6a792189289803d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Collision, SameHeightNoCollision)</argsstring>
        <name>TEST</name>
        <param>
          <type>Collision</type>
        </param>
        <param>
          <type>SameHeightNoCollision</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" line="43" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" bodystart="43" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="test__collision_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" line="55" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp" bodystart="55" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/math/collision.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">TEST(Collision,<sp/>DifferentHeight)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>pose1.position.z<sp/>=<sp/>30.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(traffic_simulator::math::checkCollision2D(pose0,<sp/>box,<sp/>pose1,<sp/>box));</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">TEST(Collision,<sp/>SamePosition)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(traffic_simulator::math::checkCollision2D(pose0,<sp/>box,<sp/>pose1,<sp/>box));</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">TEST(Collision,<sp/>SameHeightNoCollision)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>pose0.position.x<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(traffic_simulator::math::checkCollision2D(pose0,<sp/>box,<sp/>pose1,<sp/>box));</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/math/test_collision.cpp"/>
  </compounddef>
</doxygen>
