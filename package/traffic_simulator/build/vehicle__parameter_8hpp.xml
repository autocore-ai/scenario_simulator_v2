<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="vehicle__parameter_8hpp" kind="file" language="C++">
    <compoundname>vehicle_parameter.hpp</compoundname>
    <includes local="no">openscenario_msgs.pb.h</includes>
    <includes local="no">boost/foreach.hpp</includes>
    <includes local="no">boost/property_tree/ptree.hpp</includes>
    <includes local="no">boost/property_tree/xml_parser.hpp</includes>
    <includes local="no">geometry_msgs/msg/vector3.hpp</includes>
    <includes local="no">openscenario_msgs/msg/bounding_box.hpp</includes>
    <includes local="no">openscenario_msgs/msg/vehicle_parameters.hpp</includes>
    <includes local="no">pugixml.hpp</includes>
    <includes local="no">rclcpp/rclcpp.hpp</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includedby refid="lane__change__action_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/lane_change_action.hpp</includedby>
    <includedby refid="vehicle__action__node_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/vehicle_action_node.hpp</includedby>
    <includedby refid="pedestrian__parameter_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/pedestrian_parameter.hpp</includedby>
    <includedby refid="vehicle__entity_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/vehicle_entity.hpp</includedby>
    <includedby refid="lane__change__action_8cpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/vehicle/lane_change_action.cpp</includedby>
    <incdepgraph>
      <node id="2249">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="2253">
        <label>pugixml.hpp</label>
      </node>
      <node id="2247">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="2246">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="2252">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="2256">
        <label>string</label>
      </node>
      <node id="2251">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="2245">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/vehicle_parameter.hpp</label>
        <link refid="vehicle__parameter_8hpp"/>
        <childnode refid="2246" relation="include">
        </childnode>
        <childnode refid="2247" relation="include">
        </childnode>
        <childnode refid="2248" relation="include">
        </childnode>
        <childnode refid="2249" relation="include">
        </childnode>
        <childnode refid="2250" relation="include">
        </childnode>
        <childnode refid="2251" relation="include">
        </childnode>
        <childnode refid="2252" relation="include">
        </childnode>
        <childnode refid="2253" relation="include">
        </childnode>
        <childnode refid="2254" relation="include">
        </childnode>
        <childnode refid="2255" relation="include">
        </childnode>
        <childnode refid="2256" relation="include">
        </childnode>
      </node>
      <node id="2254">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="2250">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="2255">
        <label>sstream</label>
      </node>
      <node id="2248">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2262">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/api/api.hpp</label>
        <link refid="api_8hpp_source"/>
      </node>
      <node id="2269">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/traveled_distance_metric.hpp</label>
        <link refid="traveled__distance__metric_8hpp_source"/>
        <childnode refid="2264" relation="include">
        </childnode>
      </node>
      <node id="2283">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/walk_straight_action.hpp</label>
        <link refid="walk__straight__action_8hpp"/>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
      </node>
      <node id="2271">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/follow_front_entity_action.hpp</label>
        <link refid="follow__front__entity__action_8hpp_source"/>
      </node>
      <node id="2266">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/momentary_stop_metric.hpp</label>
        <link refid="momentary__stop__metric_8hpp_source"/>
        <childnode refid="2264" relation="include">
        </childnode>
      </node>
      <node id="2274">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_crossing_entity_action.hpp</label>
        <link refid="stop__at__crossing__entity__action_8hpp_source"/>
      </node>
      <node id="2280">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/behavior_tree.hpp</label>
        <link refid="pedestrian_2behavior__tree_8hpp_source"/>
        <childnode refid="2281" relation="include">
        </childnode>
      </node>
      <node id="2276">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_traffic_light_action.hpp</label>
        <link refid="stop__at__traffic__light__action_8hpp_source"/>
      </node>
      <node id="2263">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/metric_base.hpp</label>
        <link refid="metric__base_8hpp_source"/>
        <childnode refid="2264" relation="include">
        </childnode>
        <childnode refid="2265" relation="include">
        </childnode>
        <childnode refid="2266" relation="include">
        </childnode>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2268" relation="include">
        </childnode>
        <childnode refid="2269" relation="include">
        </childnode>
      </node>
      <node id="2281">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/pedestrian_entity.hpp</label>
        <link refid="pedestrian__entity_8hpp_source"/>
        <childnode refid="2261" relation="include">
        </childnode>
      </node>
      <node id="2267">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/out_of_range_metric.hpp</label>
        <link refid="out__of__range__metric_8hpp_source"/>
        <childnode refid="2264" relation="include">
        </childnode>
      </node>
      <node id="2284">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/behavior/pedestrian/walk_straight_action.cpp</label>
        <link refid="walk__straight__action_8cpp"/>
      </node>
      <node id="2275">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/stop_at_stop_line_action.hpp</label>
        <link refid="stop__at__stop__line__action_8hpp_source"/>
      </node>
      <node id="2257">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/vehicle_parameter.hpp</label>
        <link refid="vehicle__parameter_8hpp"/>
        <childnode refid="2258" relation="include">
        </childnode>
        <childnode refid="2270" relation="include">
        </childnode>
        <childnode refid="2278" relation="include">
        </childnode>
        <childnode refid="2259" relation="include">
        </childnode>
      </node>
      <node id="2258">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/lane_change_action.hpp</label>
        <link refid="lane__change__action_8hpp_source"/>
        <childnode refid="2259" relation="include">
        </childnode>
      </node>
      <node id="2273">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/move_backward_action.hpp</label>
        <link refid="move__backward__action_8hpp_source"/>
      </node>
      <node id="2278">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/pedestrian_parameter.hpp</label>
        <link refid="pedestrian__parameter_8hpp_source"/>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2282" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
      </node>
      <node id="2261">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/entity_manager.hpp</label>
        <link refid="entity__manager_8hpp_source"/>
        <childnode refid="2262" relation="include">
        </childnode>
        <childnode refid="2263" relation="include">
        </childnode>
        <childnode refid="2265" relation="include">
        </childnode>
      </node>
      <node id="2268">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/reaction_time_metric.hpp</label>
        <link refid="reaction__time__metric_8hpp_source"/>
        <childnode refid="2264" relation="include">
        </childnode>
      </node>
      <node id="2265">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/metrics_manager.hpp</label>
        <link refid="metrics__manager_8hpp_source"/>
        <childnode refid="2262" relation="include">
        </childnode>
      </node>
      <node id="2259">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/vehicle_entity.hpp</label>
        <link refid="vehicle__entity_8hpp_source"/>
        <childnode refid="2260" relation="include">
        </childnode>
        <childnode refid="2261" relation="include">
        </childnode>
      </node>
      <node id="2279">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/follow_lane_action.hpp</label>
        <link refid="pedestrian_2follow__lane__action_8hpp_source"/>
        <childnode refid="2280" relation="include">
        </childnode>
      </node>
      <node id="2264">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/metrics/metrics.hpp</label>
        <link refid="metrics_8hpp_source"/>
        <childnode refid="2262" relation="include">
        </childnode>
      </node>
      <node id="2260">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/ego_entity.hpp</label>
        <link refid="ego__entity_8hpp_source"/>
        <childnode refid="2261" relation="include">
        </childnode>
      </node>
      <node id="2282">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/pedestrian/pedestrian_action_node.hpp</label>
        <link refid="pedestrian__action__node_8hpp_source"/>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
      </node>
      <node id="2270">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/vehicle_action_node.hpp</label>
        <link refid="vehicle__action__node_8hpp_source"/>
        <childnode refid="2271" relation="include">
        </childnode>
        <childnode refid="2272" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2274" relation="include">
        </childnode>
        <childnode refid="2275" relation="include">
        </childnode>
        <childnode refid="2276" relation="include">
        </childnode>
        <childnode refid="2277" relation="include">
        </childnode>
        <childnode refid="2258" relation="include">
        </childnode>
      </node>
      <node id="2272">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/follow_lane_action.hpp</label>
        <link refid="vehicle_2follow__lane__sequence_2follow__lane__action_8hpp_source"/>
      </node>
      <node id="2277">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/behavior/vehicle/follow_lane_sequence/yield_action.hpp</label>
        <link refid="yield__action_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1Performance" prot="public">traffic_simulator::entity::Performance</innerclass>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1Center" prot="public">traffic_simulator::entity::Center</innerclass>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1Dimensions" prot="public">traffic_simulator::entity::Dimensions</innerclass>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1BoundingBox" prot="public">traffic_simulator::entity::BoundingBox</innerclass>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1Axle" prot="public">traffic_simulator::entity::Axle</innerclass>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1Axles" prot="public">traffic_simulator::entity::Axles</innerclass>
    <innerclass refid="structtraffic__simulator_1_1entity_1_1VehicleParameters" prot="public">traffic_simulator::entity::VehicleParameters</innerclass>
    <innernamespace refid="namespacetraffic__simulator">traffic_simulator</innernamespace>
    <innernamespace refid="namespacetraffic__simulator_1_1entity">traffic_simulator::entity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRAFFIC_SIMULATOR__ENTITY__VEHICLE_PARAMETER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRAFFIC_SIMULATOR__ENTITY__VEHICLE_PARAMETER_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>headers<sp/>in<sp/>pugixml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_msgs.pb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/foreach.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/property_tree/ptree.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/property_tree/xml_parser.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/vector3.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_msgs/msg/bounding_box.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_msgs/msg/vehicle_parameters.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pugixml.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rclcpp/rclcpp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetraffic__simulator" kindref="compound">traffic_simulator</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">entity</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36" refid="structtraffic__simulator_1_1entity_1_1Performance" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1Performance" kindref="compound">Performance</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Performance" kindref="compound">Performance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>:<sp/>max_speed(xml.child(</highlight><highlight class="stringliteral">&quot;Performance&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;maxSpeed&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>max_acceleration(xml.child(</highlight><highlight class="stringliteral">&quot;Performance&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;maxAcceleration&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>max_deceleration(xml.child(</highlight><highlight class="stringliteral">&quot;Performance&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;maxDeceleration&quot;</highlight><highlight class="normal">).as_double())</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Performance" kindref="compound">Performance</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_speed,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_acceleration,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_deceleration)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>:<sp/>max_speed(max_speed),<sp/>max_acceleration(max_acceleration),<sp/>max_deceleration(max_deceleration)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_speed;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_acceleration;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_deceleration;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::Performance<sp/>toRosMsg()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::Performance<sp/>ret;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.max_speed<sp/>=<sp/>max_speed;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.max_acceleration<sp/>=<sp/>max_acceleration;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.max_deceleration<sp/>=<sp/>max_deceleration;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structtraffic__simulator_1_1entity_1_1Center" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1Center" kindref="compound">Center</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Center" kindref="compound">Center</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>:<sp/>x(xml.child(</highlight><highlight class="stringliteral">&quot;BoundingBox&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>y(xml.child(</highlight><highlight class="stringliteral">&quot;BoundingBox&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>z(xml.child(</highlight><highlight class="stringliteral">&quot;BoundingBox&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">).as_double())</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Center" kindref="compound">Center</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z)<sp/>:<sp/>x(x),<sp/>y(y),<sp/>z(z)<sp/>{}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structtraffic__simulator_1_1entity_1_1Dimensions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1Dimensions" kindref="compound">Dimensions</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Dimensions" kindref="compound">Dimensions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>:<sp/>width(xml.child(</highlight><highlight class="stringliteral">&quot;BoundingBox&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;Dimensions&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;width&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>length(xml.child(</highlight><highlight class="stringliteral">&quot;BoundingBox&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;Dimensions&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;length&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>height(xml.child(</highlight><highlight class="stringliteral">&quot;BoundingBox&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;Dimensions&quot;</highlight><highlight class="normal">).attribute(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">).as_double())</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Dimensions" kindref="compound">Dimensions</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>:<sp/>width(width),<sp/>length(length),<sp/>height(height)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structtraffic__simulator_1_1entity_1_1BoundingBox" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1BoundingBox" kindref="compound">BoundingBox</ref></highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1BoundingBox" kindref="compound">BoundingBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)<sp/>:<sp/>center(xml),<sp/>dimensions(xml)<sp/>{}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1BoundingBox" kindref="compound">BoundingBox</ref>(<ref refid="structtraffic__simulator_1_1entity_1_1Center" kindref="compound">Center</ref><sp/>center,<sp/><ref refid="structtraffic__simulator_1_1entity_1_1Dimensions" kindref="compound">Dimensions</ref><sp/>dimensions)<sp/>:<sp/>center(center),<sp/>dimensions(dimensions)<sp/>{}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Center" kindref="compound">Center</ref><sp/>center;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Dimensions" kindref="compound">Dimensions</ref><sp/>dimensions;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::BoundingBox<sp/>toRosMsg()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>ret;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.center.x<sp/>=<sp/>center.x;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.center.y<sp/>=<sp/>center.y;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.center.z<sp/>=<sp/>center.z;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.dimensions.x<sp/>=<sp/>dimensions.length;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.dimensions.y<sp/>=<sp/>dimensions.width;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.dimensions.z<sp/>=<sp/>dimensions.height;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structtraffic__simulator_1_1entity_1_1Axle" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>:<sp/>max_steering(xml.attribute(</highlight><highlight class="stringliteral">&quot;maxSteering&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>wheel_diameter(xml.attribute(</highlight><highlight class="stringliteral">&quot;wheelDiameter&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>track_width(xml.attribute(</highlight><highlight class="stringliteral">&quot;trackWidth&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>position_x(xml.attribute(</highlight><highlight class="stringliteral">&quot;positionX&quot;</highlight><highlight class="normal">).as_double()),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>position_z(xml.attribute(</highlight><highlight class="stringliteral">&quot;positionZ&quot;</highlight><highlight class="normal">).as_double())</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref>(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_steering,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wheel_diameter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>track_width,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position_x,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position_z)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>:<sp/>max_steering(max_steering),</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>wheel_diameter(wheel_diameter),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>track_width(track_width),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>position_x(position_x),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>position_z(position_z)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_steering;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wheel_diameter;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>track_width;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position_x;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position_z;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::Axle<sp/>toRosMsg()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::Axle<sp/>ret;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.max_steering<sp/>=<sp/>max_steering;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.wheel_diameter<sp/>=<sp/>wheel_diameter;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.track_width<sp/>=<sp/>track_width;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.position_x<sp/>=<sp/>position_x;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.position_z<sp/>=<sp/>position_z;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="structtraffic__simulator_1_1entity_1_1Axles" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1Axles" kindref="compound">Axles</ref></highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axles" kindref="compound">Axles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>:<sp/>front_axle(xml.child(</highlight><highlight class="stringliteral">&quot;Axles&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;FrontAxle&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>rear_axle(xml.child(</highlight><highlight class="stringliteral">&quot;Axles&quot;</highlight><highlight class="normal">).child(</highlight><highlight class="stringliteral">&quot;RearAxle&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axles" kindref="compound">Axles</ref>(<ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref><sp/>front_axle,<sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref><sp/>rear_axle)<sp/>:<sp/>front_axle(front_axle),<sp/>rear_axle(rear_axle)<sp/>{}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref><sp/>front_axle;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axle" kindref="compound">Axle</ref><sp/>rear_axle;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::Axles<sp/>toRosMsg()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::Axles<sp/>ret;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.front_axle<sp/>=<sp/>front_axle.toRosMsg();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.rear_axle<sp/>=<sp/>rear_axle.toRosMsg();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="structtraffic__simulator_1_1entity_1_1VehicleParameters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtraffic__simulator_1_1entity_1_1VehicleParameters" kindref="compound">VehicleParameters</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1VehicleParameters" kindref="compound">VehicleParameters</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pugi::xml_node<sp/>&amp;<sp/>xml)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>:<sp/>performance(xml.child(</highlight><highlight class="stringliteral">&quot;Vehicle&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box(xml.child(</highlight><highlight class="stringliteral">&quot;Vehicle&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>axles(xml.child(</highlight><highlight class="stringliteral">&quot;Vehicle&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>name(xml.attribute(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">).as_string()),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>vehicle_category(xml.attribute(</highlight><highlight class="stringliteral">&quot;vehicleCategory&quot;</highlight><highlight class="normal">).as_string())</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1VehicleParameters" kindref="compound">VehicleParameters</ref>(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>name,<sp/>std::string<sp/>vehicle_category,<sp/><ref refid="structtraffic__simulator_1_1entity_1_1Performance" kindref="compound">Performance</ref><sp/>performance,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtraffic__simulator_1_1entity_1_1BoundingBox" kindref="compound">BoundingBox</ref><sp/>bounding_box,<sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axles" kindref="compound">Axles</ref><sp/>axles)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>:<sp/>performance(performance),</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>bounding_box(bounding_box),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>axles(axles),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>name(name),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>vehicle_category(vehicle_category)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Performance" kindref="compound">Performance</ref><sp/>performance;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1BoundingBox" kindref="compound">BoundingBox</ref><sp/>bounding_box;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtraffic__simulator_1_1entity_1_1Axles" kindref="compound">Axles</ref><sp/>axles;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>vehicle_category;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::VehicleParameters<sp/>toRosMsg()</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>openscenario_msgs::msg::VehicleParameters<sp/>ret;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.vehicle_category<sp/>=<sp/>vehicle_category;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.bounding_box<sp/>=<sp/>bounding_box.toRosMsg();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.axles<sp/>=<sp/>axles.toRosMsg();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ret.performance<sp/>=<sp/>performance.toRosMsg();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>std::string<sp/>toXml()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="205"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>boost::property_tree::ptree;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>pt;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>&amp;<sp/>vehicle_tree<sp/>=<sp/>pt.add(</highlight><highlight class="stringliteral">&quot;Vehicle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>vehicle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.name&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>vehicle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.vehicleCategory&quot;</highlight><highlight class="normal">,<sp/>vehicle_category);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>&amp;<sp/>performance_tree<sp/>=<sp/>vehicle_tree.add(</highlight><highlight class="stringliteral">&quot;Performance&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>performance_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.maxSpeed&quot;</highlight><highlight class="normal">,<sp/>performance.max_speed);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>performance_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.maxAcceleration&quot;</highlight><highlight class="normal">,<sp/>performance.max_acceleration);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>performance_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.maxDeceleration&quot;</highlight><highlight class="normal">,<sp/>performance.max_deceleration);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>&amp;<sp/>center_tree<sp/>=<sp/>vehicle_tree.add(</highlight><highlight class="stringliteral">&quot;BoundingBox.Center&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>center_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.x&quot;</highlight><highlight class="normal">,<sp/>bounding_box.center.x);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>center_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.y&quot;</highlight><highlight class="normal">,<sp/>bounding_box.center.y);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>center_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.z&quot;</highlight><highlight class="normal">,<sp/>bounding_box.center.z);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>&amp;<sp/>dimensions_tree<sp/>=<sp/>vehicle_tree.add(</highlight><highlight class="stringliteral">&quot;BoundingBox.Dimensions&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensions_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.width&quot;</highlight><highlight class="normal">,<sp/>bounding_box.dimensions.width);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensions_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.length&quot;</highlight><highlight class="normal">,<sp/>bounding_box.dimensions.length);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensions_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.height&quot;</highlight><highlight class="normal">,<sp/>bounding_box.dimensions.height);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>&amp;<sp/>front_axle_tree<sp/>=<sp/>vehicle_tree.add(</highlight><highlight class="stringliteral">&quot;Axles.FrontAxle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>front_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.maxSteering&quot;</highlight><highlight class="normal">,<sp/>axles.front_axle.max_steering);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>front_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.wheelDiameter&quot;</highlight><highlight class="normal">,<sp/>axles.front_axle.wheel_diameter);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>front_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.trackWidth&quot;</highlight><highlight class="normal">,<sp/>axles.front_axle.track_width);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>front_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.positionX&quot;</highlight><highlight class="normal">,<sp/>axles.front_axle.position_x);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>front_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.positionZ&quot;</highlight><highlight class="normal">,<sp/>axles.front_axle.position_z);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>ptree<sp/>&amp;<sp/>rear_axle_tree<sp/>=<sp/>vehicle_tree.add(</highlight><highlight class="stringliteral">&quot;Axles.RearAxle&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>rear_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.maxSteering&quot;</highlight><highlight class="normal">,<sp/>axles.rear_axle.max_steering);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>rear_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.wheelDiameter&quot;</highlight><highlight class="normal">,<sp/>axles.rear_axle.wheel_diameter);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>rear_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.trackWidth&quot;</highlight><highlight class="normal">,<sp/>axles.rear_axle.track_width);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>rear_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.positionX&quot;</highlight><highlight class="normal">,<sp/>axles.rear_axle.position_x);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>rear_axle_tree.put(</highlight><highlight class="stringliteral">&quot;&lt;xmlattr&gt;.positionZ&quot;</highlight><highlight class="normal">,<sp/>axles.rear_axle.position_z);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>boost::property_tree::write_xml(ss,<sp/>pt);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>traffic_simulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TRAFFIC_SIMULATOR__ENTITY__VEHICLE_PARAMETER_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/entity/vehicle_parameter.hpp"/>
  </compounddef>
</doxygen>
